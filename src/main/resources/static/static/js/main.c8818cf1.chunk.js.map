{"version":3,"sources":["components/Book/CreateBookButton.js","actions/types.js","actions/bookActions.js","components/Dashboard.js","securityUtils/setJWTToken.js","actions/securityActions.js","components/Layout/Header.js","actions/projectActions.js","components/Project/AddProject.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/backlogReducer.js","reducers/bookReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","components/Project/UpdateProject.js","components/ProjectBoard/ProjectTasks/ProjectTask.js","actions/backlogActions.js","components/ProjectBoard/Backlog.js","components/ProjectBoard/ProjectBoard.js","components/ProjectBoard/ProjectTasks/AddProjectTask.js","components/ProjectBoard/ProjectTasks/UpdateProjectTask.js","components/Layout/Landing.js","components/UserManagement/Register.js","components/UserManagement/Login.js","securityUtils/SecureRoute.js","components/Library.js","components/Book/AddBook.js","components/Book/UpdateBook.js","components/Popovers.js","components/Book/ViewBook.js","components/Book/BookContent.js","components/ExportToDoc.js","components/Book/ExportBook.js","App.js","registerServiceWorker.js","index.js"],"names":["CreateBookButton","data","Fragment","to","className","name","GET_ERRORS","createBook","book","button","history","dispatch","a","push","axios","post","window","confirm","type","payload","response","getBook","id","get","res","Dashboard","onDeleteClick","props","deleteBook","this","getMyBooks","books","items","fields","striped","itemsPerPage","pagination","scopedSlots","item","href","rel","block","size","color","onClick","bind","Component","connect","state","delete","setJWTToken","token","defaults","headers","common","logout","localStorage","removeItem","Header","location","headerLinks","security","validToken","user","userIsAuthenticated","fullName","userIsNotAuthenticated","data-toggle","data-target","createProject","project","AddProject","projectName","projectIdentifier","description","start_date","end_date","errors","onChange","onSubmit","nextProps","setState","e","target","value","preventDefault","newProject","classnames","placeholder","initialState","projects","project_tasks","project_task","bookContent","booleanActionPayload","combineReducers","action","filter","backlog","projectSequence","initalState","middleware","thunk","ReactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","UpdateProject","match","params","getProject","updateProject","disabled","ProjectTask","backlog_id","pt_id","deleteProjectTask","priorityString","priorityClass","priority","summary","acceptanceCriteria","Backlog","tasks","project_tasks_prop","map","key","todoItems","inProgressItems","doneItems","i","length","status","ProjectBoard","getBacklog","BoardContent","projectNotFound","role","boardAlgorithm","AddProjectTask","dueDate","newTask","addProjectTask","UpdateProjectTask","create_At","getProjectTask","updateProjectTask","patch","Landing","Register","username","password","confirmPassword","newUser","createNewUser","Login","LoginRequest","login","setItem","decoded","jwt_decode","component","otherProps","render","Library","getBooks","columnFilter","tableFilter","footer","itemsPerPageSelect","hover","sorter","AddBook","bookName","bookEdition","pageNumber","subject","subSubject","shlok","event","reference","actor","author","village","eventDate","birthDate","deathDate","eventDateGuj","birthDateGuj","deathDateGuj","comments","newBook","Moment","format","encType","htmlFor","rows","UpdateBook","updateBook","toggleFade","back","Popovers","md","htmlToImage","document","getElementById","quality","then","dataUrl","createElement","download","pdf","jsPDF","imgProps","getImageProperties","pdfWidth","internal","pageSize","getWidth","pdfHeight","height","width","addImage","save","ViewBook","BookContent","console","log","getBookContent","ExportToDoc","class","html","innerHTML","blob","Blob","url","encodeURIComponent","filename","downloadLink","body","appendChild","msSaveOrOpenBlob","click","removeChild","jwtToken","decoded_jwtToken","currentTime","Date","now","exp","App","exact","path","ExportBook","isLocalhost","Boolean","hostname","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","URL","process","origin","addEventListener","fetch","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.c8818cf1.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst CreateBookButton = (data) => {\n  return (\n    <React.Fragment>\n      <Link to=\"/addBook\" className=\"btn btn-lg btn-info\">\n      {data.name}\n      </Link>\n    </React.Fragment>\n  );\n};\n\nexport default CreateBookButton;\n","export const GET_ERRORS = \"GET_ERRORS\";\nexport const GET_PROJECTS = \"GET_PROJECTS\";\nexport const GET_PROJECT = \"GET_PROJECT\";\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\n\n//Types for BACKLOG ACTIONS\n\nexport const GET_BACKLOG = \"GET_BACKLOG\";\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";\n\n//Types for BOOK ACTIONS\n\nexport const GET_BOOKS = \"GET_BOOKS\";\nexport const GET_BOOK = \"GET_BOOK\";\nexport const DELETE_BOOK = \"DELETE_BOOK\";\nexport const GET_BOOK_CONTENT = \"GET_BOOK_CONTENT\";\n\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\n","import axios from \"axios\";\nimport { GET_ERRORS, GET_BOOKS, GET_BOOK, GET_BOOK_CONTENT, DELETE_BOOK } from \"./types\";\n\nexport const createBook = (book, button, history) => async dispatch => {\n  try {\n    if(button === 'back'){\n      history.push(\"/dashboard\");\n    }else{\n      await axios.post(\"/api/book\", book);\n      if(button === 'close'){\n        history.push(\"/dashboard\");\n      }else if(button === 'continue'){\n        window.confirm(\n          \"પુસ્તક સેવ થઇ ગયું છે, નવું પુસ્તક કે પ્રસંગ ઉમેરવા નીચે ની માહિતી નો ઉપીયોગ કરી શકો છો.\")\n      }\n      dispatch({\n        type: GET_ERRORS,\n        payload: {}\n      });\n    }\n\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const getBooks = () => async dispatch => {\n  const res = await axios.get(\"/api/book/all\");\n  dispatch({\n    type: GET_BOOKS,\n    payload: res.data\n  });\n};\nexport const getMyBooks = () => async dispatch => {\n  const res = await axios.get(\"/api/book/allMyBooks\");\n  dispatch({\n    type: GET_BOOKS,\n    payload: res.data\n  });\n};\n\nexport const getBook = (id, history) => async dispatch => {\n  try {\n    const res = await axios.get(`/api/book/${id}`);\n    dispatch({\n      type: GET_BOOK,\n      payload: res.data\n    });\n  } catch (error) {\n    history.push(\"/library\");\n  }\n};\n\nexport const getBookContent = (id, history) => async dispatch => {\n  try {\n    console.log(\"API Called: \");\n    const res = await axios.get(`/api/book/content/${id}`);\n    dispatch({\n      type: GET_BOOK_CONTENT,\n      payload: res.data\n    });\n  } catch (error) {\n    history.push(\"/library\");\n  }\n};\n\nexport const deleteBook = id => async dispatch => {\n  if (\n    window.confirm(\n      \"Are you sure? This will delete the book and all the data related to it\"\n    )\n  ) {\n    await axios.delete(`/api/book/${id}`);\n    dispatch({\n      type: DELETE_BOOK,\n      payload: id\n    });\n  }\n};\n","import React, { Component } from \"react\";\nimport CreateBookButton from \"./Book/CreateBookButton\";\nimport { connect } from \"react-redux\";\nimport { getMyBooks, deleteBook } from \"../actions/bookActions\";\nimport PropTypes from \"prop-types\";\n\nimport {\n  CLink,\n  CButton,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CDataTable,\n  CRow,\n  } from '@coreui/react'\nclass Dashboard extends Component {\n  componentDidMount() {\n    this.props.getMyBooks();\n  }\n  onDeleteClick = id => {\n    this.props.deleteBook(id);\n  };\n  render() {\n    const { books } = this.props.book;\n\n    return (\n      \n       <>\n         \n          <CCard>\n            <CCardHeader>\n            <CRow>\n            <CCol>\n              <center><h5>ડેશબોર્ડ - <small>તમારા દ્વારા એન્ટ્રી કે સુધારેલા પુસ્તકો અને પ્રસંગોનું લીસ્ટ</small></h5></center>\n            </CCol>\n              <CreateBookButton name=\"નવું પુસ્તક +\" />              \n            </CRow>\n            </CCardHeader>\n            <CCardBody>\n            <CDataTable\n              items={books}\n              fields={fields}\n              striped\n              itemsPerPage={5}\n              pagination\n              scopedSlots = {{\n                'id':\n                  (item)=>(\n                    <td>\n                      <CLink \n                        href={`/viewBook/${item.id}`}\n                        rel=\"noreferrer noopener\" \n                        className=\"card-header-action\"  >\n                        <CButton block className=\".btn-ghost-button\" size=\"sm\" color=\"success\">View</CButton>\n                        </CLink>\n                      <CLink \n                        href={`/updateBook/${item.id}`}\n                        rel=\"noreferrer noopener\" \n                        className=\"card-header-action\"  >\n                        <CButton block  className=\".btn-ghost-button\" size=\"sm\" color=\"warning\">Edit</CButton>\n\n                      </CLink>\n                      <CLink \n                      onClick={this.onDeleteClick.bind(\n                        this,\n                        item.id\n                      )}\n                        rel=\"noreferrer noopener\" \n                        className=\"card-header-action\"  >\n                        <CButton block className=\".btn-ghost-button\" size=\"sm\" color=\"danger\">Delete</CButton>\n                      </CLink>\n         \n            \n                    </td>\n                    \n                  )\n\n              }}\n            />\n            </CCardBody>\n          </CCard>\n        \n      </>\n            \n    );\n  }\n}\n\nconst fields = ['bookName', 'bookEdition', 'author', 'pageNumber', 'subject', 'subSubject', 'reference', 'actor', 'village', 'birthDate', 'birthDateGuj', 'deathDate', 'deathDateGuj',  'eventDate', 'eventDateGuj', 'id'];\n\nDashboard.propTypes = {\n  book: PropTypes.object.isRequired,\n  getMyBooks: PropTypes.func.isRequired,\n  deleteBook: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  book: state.book\n});\n\nexport default connect(\n  mapStateToProps,\n  { getMyBooks, deleteBook }\n)(Dashboard);","import axios from \"axios\";\n\nconst setJWTToken = token => {\n  if (token) {\n    axios.defaults.headers.common[\"Authorization\"] = token;\n  } else {\n    delete axios.defaults.headers.common[\"Authorization\"];\n  }\n};\n\nexport default setJWTToken;\n","import axios from \"axios\";\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\nimport setJWTToken from \"../securityUtils/setJWTToken\";\nimport jwt_decode from \"jwt-decode\";\n\nexport const createNewUser = (newUser, history) => async dispatch => {\n  try {\n    await axios.post(\"/api/users/register\", newUser);\n    history.push(\"/login\");\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const login = LoginRequest => async dispatch => {\n  try {\n    // post => Login Request\n    const res = await axios.post(\"/api/users/login\", LoginRequest);\n    // extract token from res.data\n    const { token } = res.data;\n    // store the token in the localStorage\n    localStorage.setItem(\"jwtToken\", token);\n    // set our token in header ***\n    setJWTToken(token);\n    // decode token on React\n    const decoded = jwt_decode(token);\n    // dispatch to our securityReducer\n    dispatch({\n      type: SET_CURRENT_USER,\n      payload: decoded\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const logout = () => dispatch => {\n  localStorage.removeItem(\"jwtToken\");\n  setJWTToken(false);\n  dispatch({\n    type: SET_CURRENT_USER,\n    payload: {}\n  });\n};\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logout } from \"../../actions/securityActions\";\n\nclass Header extends Component {\n  logout() {\n    this.props.logout();\n    window.location.href = \"/\";\n  }\n  render() {\n    const { validToken, user } = this.props.security;\n\n    const userIsAuthenticated = (\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n        <ul className=\"navbar-nav mr-auto\">\n              <li className=\"nav-item\">\n                <a className=\"nav-link\" href=\"/library\">\n                લાયબ્રેરી\n                </a>\n              </li>\n        </ul>\n        <ul className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/dashboard\">\n            મારુ ડેશબોર્ડ\n            </Link>\n          </li>\n        </ul>\n        <ul className=\"navbar-nav mr-auto\">\n        <li className=\"nav-item\">\n          <Link className=\"nav-link\" to=\"/addBook\">\n          નવું પુસ્તક +\n          </Link>\n        </li>\n      </ul>\n        <ul className=\"navbar-nav ml-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/dashboard\">\n              <i className=\"fas fa-user-circle mr-1\" />\n              {user.fullName}\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link\n              className=\"nav-link\"\n              to=\"/logout\"\n              onClick={this.logout.bind(this)}>\n            લોગ આઉટ\n            </Link>\n          </li>\n        </ul>\n      </div>\n    );\n\n    const userIsNotAuthenticated = (\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n        <ul className=\"navbar-nav ml-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/register\">\n            રેજિસ્ટર\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/login\">\n            લોગીન\n            </Link>\n          </li>\n        </ul>\n      </div>\n    );\n\n    let headerLinks;\n\n    if (validToken && user) {\n      headerLinks = userIsAuthenticated;\n    } else {\n      headerLinks = userIsNotAuthenticated;\n    }\n\n    return (\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\n        <div className=\"container\">\n          <Link className=\"navbar-brand\" to=\"/\">\n          <b>કેયોના જ્ઞાનસાગર </b>- <small>સત્સંગ ના પ્રસંગો</small> \n          </Link>\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#mobile-nav\"\n          >\n            <span className=\"navbar-toggler-icon\" />\n          </button>\n          {headerLinks}\n        </div>\n      </nav>\n    );\n  }\n}\n\nHeader.propTypes = {\n  logout: PropTypes.func.isRequired,\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  security: state.security\n});\n\nexport default connect(\n  mapStateToProps,\n  { logout }\n)(Header);\n","import axios from \"axios\";\nimport { GET_ERRORS, GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"./types\";\n\nexport const createProject = (project, history) => async dispatch => {\n  try {\n    await axios.post(\"/api/project\", project);\n    history.push(\"/dashboard\");\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const getProjects = () => async dispatch => {\n  const res = await axios.get(\"/api/project/all\");\n  dispatch({\n    type: GET_PROJECTS,\n    payload: res.data\n  });\n};\n\nexport const getProject = (id, history) => async dispatch => {\n  try {\n    const res = await axios.get(`/api/project/${id}`);\n    dispatch({\n      type: GET_PROJECT,\n      payload: res.data\n    });\n  } catch (error) {\n    history.push(\"/dashboard\");\n  }\n};\n\nexport const deleteProject = id => async dispatch => {\n  if (\n    window.confirm(\n      \"Are you sure? This will delete the project and all the data related to it\"\n    )\n  ) {\n    await axios.delete(`/api/project/${id}`);\n    dispatch({\n      type: DELETE_PROJECT,\n      payload: id\n    });\n  }\n};\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { createProject } from \"../../actions/projectActions\";\nimport classnames from \"classnames\";\n\nclass AddProject extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      projectName: \"\",\n      projectIdentifier: \"\",\n      description: \"\",\n      start_date: \"\",\n      end_date: \"\",\n      errors: {}\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  //life cycle hooks\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const newProject = {\n      projectName: this.state.projectName,\n      projectIdentifier: this.state.projectIdentifier,\n      description: this.state.description,\n      start_date: this.state.start_date,\n      end_date: this.state.end_date\n    };\n    this.props.createProject(newProject, this.props.history);\n  }\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div>\n        <div className=\"project\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-8 m-auto\">\n                <h5 className=\"display-4 text-center\">Create Project form</h5>\n                <hr />\n                <form onSubmit={this.onSubmit}>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      className={classnames(\"form-control form-control-lg\", {\n                        \"is-invalid\": errors.projectName\n                      })}\n                      placeholder=\"Project Name\"\n                      name=\"projectName\"\n                      value={this.state.projectName}\n                      onChange={this.onChange}\n                    />\n                    {errors.projectName && (\n                      <div className=\"invalid-feedback\">\n                        {errors.projectName}\n                      </div>\n                    )}\n                  </div>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      className={classnames(\"form-control form-control-lg\", {\n                        \"is-invalid\": errors.projectIdentifier\n                      })}\n                      placeholder=\"Unique Project ID\"\n                      name=\"projectIdentifier\"\n                      value={this.state.projectIdentifier}\n                      onChange={this.onChange}\n                    />\n                    {errors.projectIdentifier && (\n                      <div className=\"invalid-feedback\">\n                        {errors.projectIdentifier}\n                      </div>\n                    )}\n                  </div>\n                  <div className=\"form-group\">\n                    <textarea\n                      className={classnames(\"form-control form-control-lg\", {\n                        \"is-invalid\": errors.description\n                      })}\n                      placeholder=\"Project Description\"\n                      name=\"description\"\n                      value={this.state.description}\n                      onChange={this.onChange}\n                    />\n                    {errors.description && (\n                      <div className=\"invalid-feedback\">\n                        {errors.description}\n                      </div>\n                    )}\n                  </div>\n                  <h6>Start Date</h6>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"date\"\n                      className=\"form-control form-control-lg\"\n                      name=\"start_date\"\n                      value={this.state.start_date}\n                      onChange={this.onChange}\n                    />\n                  </div>\n                  <h6>Estimated End Date</h6>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"date\"\n                      className=\"form-control form-control-lg\"\n                      name=\"end_date\"\n                      value={this.state.end_date}\n                      onChange={this.onChange}\n                    />\n                  </div>\n\n                  <input\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block mt-4\"\n                  />\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nAddProject.propTypes = {\n  createProject: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { createProject }\n)(AddProject);\n","import { GET_ERRORS } from \"../actions/types\";\n\nconst initialState = {};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return action.payload;\n\n    default:\n      return state;\n  }\n}\n","import { GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"../actions/types\";\n\nconst initialState = {\n  projects: [],\n  project: {}\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_PROJECTS:\n      return {\n        ...state,\n        projects: action.payload\n      };\n\n    case GET_PROJECT:\n      return {\n        ...state,\n        project: action.payload\n      };\n\n    case DELETE_PROJECT:\n      return {\n        ...state,\n        projects: state.projects.filter(\n          project => project.projectIdentifier !== action.payload\n        )\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  GET_BACKLOG,\n  GET_PROJECT_TASK,\n  DELETE_PROJECT_TASK\n} from \"../actions/types\";\n\nconst initialState = {\n  project_tasks: [],\n  project_task: {}\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_BACKLOG:\n      return {\n        ...state,\n        project_tasks: action.payload\n      };\n\n    case GET_PROJECT_TASK:\n      return {\n        ...state,\n        project_task: action.payload\n      };\n\n    case DELETE_PROJECT_TASK:\n      return {\n        ...state,\n        project_tasks: state.project_tasks.filter(\n          project_task => project_task.projectSequence !== action.payload\n        )\n      };\n\n    default:\n      return state;\n  }\n}\n","import { GET_BOOKS, GET_BOOK, GET_BOOK_CONTENT, DELETE_BOOK } from \"../actions/types\";\n\nconst initialState = {\n  books: [],\n  book: {},\n  bookContent: {}\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_BOOKS:\n      return {\n        ...state,\n        books: action.payload\n      };\n\n    case GET_BOOK:\n      return {\n        ...state,\n        book: action.payload\n      };\n      case GET_BOOK_CONTENT:\n      return {\n        ...state,\n        bookContent: action.payload\n      };\n    case DELETE_BOOK:\n      return {\n        ...state,\n        books: state.books.filter(\n          book => book.id !== action.payload\n        )\n      };\n    default:\n      return state;\n  }\n}\n","import { SET_CURRENT_USER } from \"../actions/types\";\n\nconst initialState = {\n  validToken: false,\n  user: {}\n};\n\nconst booleanActionPayload = payload => {\n  if (payload) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return {\n        ...state,\n        validToken: booleanActionPayload(action.payload),\n        user: action.payload\n      };\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport errorReducer from \"./errorReducer\";\nimport projectReducer from \"./projectReducer\";\nimport backlogReducer from \"./backlogReducer\";\nimport bookReducer from \"./bookReducer\";\nimport securityReducer from \"./securityReducer\";\n\nexport default combineReducers({\n  errors: errorReducer,\n  project: projectReducer,\n  backlog: backlogReducer,\n  book: bookReducer,\n  security: securityReducer\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initalState = {};\nconst middleware = [thunk];\n\nlet store;\n\nconst ReactReduxDevTools =\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\n\nif (window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools) {\n  store = createStore(\n    rootReducer,\n    initalState,\n    compose(\n      applyMiddleware(...middleware),\n      ReactReduxDevTools\n    )\n  );\n} else {\n  store = createStore(\n    rootReducer,\n    initalState,\n    compose(applyMiddleware(...middleware))\n  );\n}\n\nexport default store;\n","import React, { Component } from \"react\";\nimport { getProject, createProject } from \"../../actions/projectActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\n\nclass UpdateProject extends Component {\n  //set state\n  constructor() {\n    super();\n\n    this.state = {\n      id: \"\",\n      projectName: \"\",\n      projectIdentifier: \"\",\n      description: \"\",\n      start_date: \"\",\n      end_date: \"\",\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n    const {\n      id,\n      projectName,\n      projectIdentifier,\n      description,\n      start_date,\n      end_date\n    } = nextProps.project;\n\n    this.setState({\n      id,\n      projectName,\n      projectIdentifier,\n      description,\n      start_date,\n      end_date\n    });\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.props.getProject(id, this.props.history);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const updateProject = {\n      id: this.state.id,\n      projectName: this.state.projectName,\n      projectIdentifier: this.state.projectIdentifier,\n      description: this.state.description,\n      start_date: this.state.start_date,\n      end_date: this.state.end_date\n    };\n\n    this.props.createProject(updateProject, this.props.history);\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"project\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h5 className=\"display-4 text-center\">Update Project form</h5>\n              <hr />\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.projectName\n                    })}\n                    placeholder=\"Project Name\"\n                    name=\"projectName\"\n                    value={this.state.projectName}\n                    onChange={this.onChange}\n                  />\n                  {errors.projectName && (\n                    <div className=\"invalid-feedback\">{errors.projectName}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Unique Project ID\"\n                    name=\"projectIdentifier\"\n                    value={this.state.projectIdentifier}\n                    onChange={this.onChange}\n                    disabled\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.description\n                    })}\n                    placeholder=\"Project Description\"\n                    name=\"description\"\n                    onChange={this.onChange}\n                    value={this.state.description}\n                  />\n                  {errors.description && (\n                    <div className=\"invalid-feedback\">{errors.description}</div>\n                  )}\n                </div>\n                <h6>Start Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"start_date\"\n                    value={this.state.start_date}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <h6>Estimated End Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"end_date\"\n                    value={this.state.end_date}\n                    onChange={this.onChange}\n                  />\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nUpdateProject.propTypes = {\n  getProject: PropTypes.func.isRequired,\n  createProject: PropTypes.func.isRequired,\n  project: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  project: state.project.project,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { getProject, createProject }\n)(UpdateProject);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { deleteProjectTask } from \"../../../actions/backlogActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nclass ProjectTask extends Component {\n  onDeleteClick(backlog_id, pt_id) {\n    this.props.deleteProjectTask(backlog_id, pt_id);\n  }\n  render() {\n    const { project_task } = this.props;\n    let priorityString;\n    let priorityClass;\n\n    if (project_task.priority === 1) {\n      priorityClass = \"bg-danger text-light\";\n      priorityString = \"HIGH\";\n    }\n\n    if (project_task.priority === 2) {\n      priorityClass = \"bg-warning text-light\";\n      priorityString = \"MEDIUM\";\n    }\n\n    if (project_task.priority === 3) {\n      priorityClass = \"bg-info text-light\";\n      priorityString = \"LOW\";\n    }\n\n    return (\n      <div className=\"card mb-1 bg-light\">\n        <div className={`card-header text-primary ${priorityClass}`}>\n          ID: {project_task.projectSequence} -- Priority: {priorityString}\n        </div>\n        <div className=\"card-body bg-light\">\n          <h5 className=\"card-title\">{project_task.summary}</h5>\n          <p className=\"card-text text-truncate \">\n            {project_task.acceptanceCriteria}\n          </p>\n          <Link\n            to={`/updateProjectTask/${project_task.projectIdentifier}/${\n              project_task.projectSequence\n            }`}\n            className=\"btn btn-primary\"\n          >\n            View / Update\n          </Link>\n\n          <button\n            className=\"btn btn-danger ml-4\"\n            onClick={this.onDeleteClick.bind(\n              this,\n              project_task.projectIdentifier,\n              project_task.projectSequence\n            )}\n          >\n            Delete\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nProjectTask.propTypes = {\n  deleteProjectTask: PropTypes.func.isRequired\n};\nexport default connect(\n  null,\n  { deleteProjectTask }\n)(ProjectTask);\n","import axios from \"axios\";\nimport {\n  GET_ERRORS,\n  GET_BACKLOG,\n  GET_PROJECT_TASK,\n  DELETE_PROJECT_TASK\n} from \"./types\";\n\n//Fix bug with priority in Spring Boot Server, needs to check null first\nexport const addProjectTask = (\n  backlog_id,\n  project_task,\n  history\n) => async dispatch => {\n  try {\n    await axios.post(`/api/backlog/${backlog_id}`, project_task);\n    history.push(`/projectBoard/${backlog_id}`);\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const getBacklog = backlog_id => async dispatch => {\n  try {\n    const res = await axios.get(`/api/backlog/${backlog_id}`);\n    dispatch({\n      type: GET_BACKLOG,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const getProjectTask = (\n  backlog_id,\n  pt_id,\n  history\n) => async dispatch => {\n  try {\n    const res = await axios.get(`/api/backlog/${backlog_id}/${pt_id}`);\n    dispatch({\n      type: GET_PROJECT_TASK,\n      payload: res.data\n    });\n  } catch (err) {\n    history.push(\"/dashboard\");\n  }\n};\n\nexport const updateProjectTask = (\n  backlog_id,\n  pt_id,\n  project_task,\n  history\n) => async dispatch => {\n  try {\n    await axios.patch(`/api/backlog/${backlog_id}/${pt_id}`, project_task);\n    history.push(`/projectBoard/${backlog_id}`);\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const deleteProjectTask = (backlog_id, pt_id) => async dispatch => {\n  if (\n    window.confirm(\n      `You are deleting project task ${pt_id}, this action cannot be undone`\n    )\n  ) {\n    await axios.delete(`/api/backlog/${backlog_id}/${pt_id}`);\n    dispatch({\n      type: DELETE_PROJECT_TASK,\n      payload: pt_id\n    });\n  }\n};\n","import React, { Component } from \"react\";\nimport ProjectTask from \"./ProjectTasks/ProjectTask\";\n\nclass Backlog extends Component {\n  render() {\n    const { project_tasks_prop } = this.props;\n\n    const tasks = project_tasks_prop.map(project_task => (\n      <ProjectTask key={project_task.id} project_task={project_task} />\n    ));\n\n    let todoItems = [];\n    let inProgressItems = [];\n    let doneItems = [];\n\n    for (let i = 0; i < tasks.length; i++) {\n      if (tasks[i].props.project_task.status === \"TO_DO\") {\n        todoItems.push(tasks[i]);\n      }\n\n      if (tasks[i].props.project_task.status === \"IN_PROGRESS\") {\n        inProgressItems.push(tasks[i]);\n      }\n\n      if (tasks[i].props.project_task.status === \"DONE\") {\n        doneItems.push(tasks[i]);\n      }\n    }\n\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-secondary text-white\">\n                <h3>TO DO</h3>\n              </div>\n            </div>\n            {todoItems}\n            {\n              // insert tasks here\n            }\n          </div>\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-primary text-white\">\n                <h3>In Progress</h3>\n              </div>\n            </div>\n            {inProgressItems}\n          </div>\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-success text-white\">\n                <h3>Done</h3>\n              </div>\n            </div>\n            {doneItems}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Backlog;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Backlog from \"./Backlog\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { getBacklog } from \"../../actions/backlogActions\";\n\nclass ProjectBoard extends Component {\n  //constructor to handle errors\n  constructor() {\n    super();\n    this.state = {\n      errors: {}\n    };\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.props.getBacklog(id);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  render() {\n    const { id } = this.props.match.params;\n    const { project_tasks } = this.props.backlog;\n    const { errors } = this.state;\n\n    let BoardContent;\n\n    const boardAlgorithm = (errors, project_tasks) => {\n      if (project_tasks.length < 1) {\n        //PROJECT IDENTIFIER BUG\n        if (errors.projectNotFound) {\n          return (\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\n              {errors.projectNotFound}\n            </div>\n          );\n        } else if (errors.projectIdentifier) {\n          return (\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\n              {errors.projectIdentifier}\n            </div>\n          );\n        } else {\n          return (\n            <div className=\"alert alert-info text-center\" role=\"alert\">\n              No Project Tasks on this board\n            </div>\n          );\n        }\n      } else {\n        return <Backlog project_tasks_prop={project_tasks} />;\n      }\n    };\n\n    BoardContent = boardAlgorithm(errors, project_tasks);\n\n    return (\n      <div className=\"container\">\n        <Link to={`/addProjectTask/${id}`} className=\"btn btn-primary mb-3\">\n          <i className=\"fas fa-plus-circle\"> Create Project Task</i>\n        </Link>\n        <br />\n        <hr />\n        {BoardContent}\n      </div>\n    );\n  }\n}\n\nProjectBoard.propTypes = {\n  backlog: PropTypes.object.isRequired,\n  getBacklog: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  backlog: state.backlog,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { getBacklog }\n)(ProjectBoard);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { addProjectTask } from \"../../../actions/backlogActions\";\nimport PropTypes from \"prop-types\";\n\nclass AddProjectTask extends Component {\n  constructor(props) {\n    super(props);\n    const { id } = this.props.match.params;\n\n    this.state = {\n      summary: \"\",\n      acceptanceCriteria: \"\",\n      status: \"\",\n      priority: 0,\n      dueDate: \"\",\n      projectIdentifier: id,\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  // on change\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n  //on submit\n  onSubmit(e) {\n    e.preventDefault();\n\n    const newTask = {\n      summary: this.state.summary,\n      acceptanceCriteria: this.state.acceptanceCriteria,\n      status: this.state.status,\n      priority: this.state.priority,\n      dueDate: this.state.dueDate\n    };\n\n    this.props.addProjectTask(\n      this.state.projectIdentifier,\n      newTask,\n      this.props.history\n    );\n  }\n\n  render() {\n    const { id } = this.props.match.params;\n    const { errors } = this.state;\n    return (\n      <div className=\"add-PBI\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <Link to={`/projectBoard/${id}`} className=\"btn btn-light\">\n                Back to Project Board\n              </Link>\n              <h4 className=\"display-4 text-center\">Add Project Task</h4>\n              <p className=\"lead text-center\">Project Name + Project Code</p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.summary\n                    })}\n                    name=\"summary\"\n                    placeholder=\"Project Task summary\"\n                    value={this.state.summary}\n                    onChange={this.onChange}\n                  />\n                  {errors.summary && (\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Acceptance Criteria\"\n                    name=\"acceptanceCriteria\"\n                    value={this.state.acceptanceCriteria}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <h6>Due Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"dueDate\"\n                    value={this.state.dueDate}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"priority\"\n                    value={this.state.priority}\n                    onChange={this.onChange}\n                  >\n                    <option value={0}>Select Priority</option>\n                    <option value={1}>High</option>\n                    <option value={2}>Medium</option>\n                    <option value={3}>Low</option>\n                  </select>\n                </div>\n\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"status\"\n                    value={this.state.status}\n                    onChange={this.onChange}\n                  >\n                    <option value=\"\">Select Status</option>\n                    <option value=\"TO_DO\">TO DO</option>\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                    <option value=\"DONE\">DONE</option>\n                  </select>\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nAddProjectTask.propTypes = {\n  addProjectTask: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { addProjectTask }\n)(AddProjectTask);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { Link } from \"react-router-dom\";\nimport {\n  getProjectTask,\n  updateProjectTask\n} from \"../../../actions/backlogActions\";\nimport PropTypes from \"prop-types\";\n\nclass UpdateProjectTask extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      id: \"\",\n      projectSequence: \"\",\n      summary: \"\",\n      acceptanceCriteria: \"\",\n      status: \"\",\n      priority: \"\",\n      dueDate: \"\",\n      projectIdentifier: \"\",\n      create_At: \"\",\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    const { backlog_id, pt_id } = this.props.match.params;\n    this.props.getProjectTask(backlog_id, pt_id, this.props.history);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n\n    const {\n      id,\n      projectSequence,\n      summary,\n      acceptanceCriteria,\n      status,\n      priority,\n      dueDate,\n      projectIdentifier,\n      create_At\n    } = nextProps.project_task;\n\n    this.setState({\n      id,\n      projectSequence,\n      summary,\n      acceptanceCriteria,\n      status,\n      priority,\n      dueDate,\n      projectIdentifier,\n      create_At\n    });\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const UpdateProjectTask = {\n      id: this.state.id,\n      projectSequence: this.state.projectSequence,\n      summary: this.state.summary,\n      acceptanceCriteria: this.state.acceptanceCriteria,\n      status: this.state.status,\n      priority: this.state.priority,\n      dueDate: this.state.dueDate,\n      projectIdentifier: this.state.projectIdentifier,\n      create_At: this.state.create_At\n    };\n\n    // console.log(UpdateProjectTask);\n    this.props.updateProjectTask(\n      this.state.projectIdentifier,\n      this.state.projectSequence,\n      UpdateProjectTask,\n      this.props.history\n    );\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"add-PBI\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <Link\n                to={`/projectBoard/${this.state.projectIdentifier}`}\n                className=\"btn btn-light\"\n              >\n                Back to Project Board\n              </Link>\n              <h4 className=\"display-4 text-center\">Update Project Task</h4>\n              <p className=\"lead text-center\">\n                Project Name: {this.state.projectIdentifier} | Project Task ID:{\" \"}\n                {this.state.projectSequence}{\" \"}\n              </p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.summary\n                    })}\n                    name=\"summary\"\n                    placeholder=\"Project Task summary\"\n                    value={this.state.summary}\n                    onChange={this.onChange}\n                  />\n                  {errors.summary && (\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Acceptance Criteria\"\n                    name=\"acceptanceCriteria\"\n                    value={this.state.acceptanceCriteria}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <h6>Due Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"dueDate\"\n                    value={this.state.dueDate}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"priority\"\n                    value={this.state.priority}\n                    onChange={this.onChange}\n                  >\n                    <option value={0}>Select Priority</option>\n                    <option value={1}>High</option>\n                    <option value={2}>Medium</option>\n                    <option value={3}>Low</option>\n                  </select>\n                </div>\n\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"status\"\n                    value={this.state.status}\n                    onChange={this.onChange}\n                  >\n                    <option value=\"\">Select Status</option>\n                    <option value=\"TO_DO\">TO DO</option>\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                    <option value=\"DONE\">DONE</option>\n                  </select>\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nUpdateProjectTask.propTypes = {\n  getProjectTask: PropTypes.func.isRequired,\n  project_task: PropTypes.object.isRequired,\n  updateProjectTask: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  project_task: state.backlog.project_task,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { getProjectTask, updateProjectTask }\n)(UpdateProjectTask);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nclass Landing extends Component {\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n  render() {\n    return (\n      <div className=\"landing\">\n        <div className=\"light-overlay landing-inner text-dark\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-12 text-center\">\n                <h1 className=\"display-3 mb-4\">\n                કેયોના જ્ઞાનસાગર\n                </h1>\n                <p className=\"lead\">\n                કેયોના જ્ઞાનસાગર માં સત્સંગ ના પ્રસંગો લખો કે વાંચો.\n                </p>\n                <hr />\n                <Link className=\"btn btn-lg btn-primary mr-2\" to=\"/register\">\n                રેજિસ્ટર\n                </Link>\n                <Link className=\"btn btn-lg btn-secondary mr-2\" to=\"/login\">\n                લોગીન\n                </Link>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLanding.propTypes = {\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  security: state.security\n});\n\nexport default connect(mapStateToProps)(Landing);\n","import React, { Component } from \"react\";\nimport { createNewUser } from \"../../actions/securityActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\n\nclass Register extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      username: \"\",\n      fullName: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const newUser = {\n      username: this.state.username,\n      fullName: this.state.fullName,\n      password: this.state.password,\n      confirmPassword: this.state.confirmPassword\n    };\n\n    this.props.createNewUser(newUser, this.props.history);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"register\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h1 className=\"display-4 text-center\">રેજિસ્ટર</h1>\n              <p className=\"lead text-center\">નવું એકાઉન્ટ બનાવવા માટે</p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.username\n                    })}\n                    placeholder=\"યુઝરનેમ - 6 થી 8 અક્ષરનું\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.onChange}\n                  />\n                  {errors.username && (\n                    <div className=\"invalid-feedback\">{errors.username}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.fullName\n                    })}\n                    placeholder=\"આખું નામ\"\n                    name=\"fullName\"\n                    value={this.state.fullName}\n                    onChange={this.onChange}\n                  />\n                  {errors.fullName && (\n                    <div className=\"invalid-feedback\">{errors.fullName}</div>\n                  )}\n                </div>\n                \n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.password\n                    })}\n                    placeholder=\"પાસવર્ડ\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChange}\n                  />\n                  {errors.password && (\n                    <div className=\"invalid-feedback\">{errors.password}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.confirmPassword\n                    })}\n                    placeholder=\"પાસવર્ડ ફરી ચકાસો\"\n                    name=\"confirmPassword\"\n                    value={this.state.confirmPassword}\n                    onChange={this.onChange}\n                  />\n                  {errors.confirmPassword && (\n                    <div className=\"invalid-feedback\">\n                      {errors.confirmPassword}\n                    </div>\n                  )}\n                </div>\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nRegister.propTypes = {\n  createNewUser: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  errors: state.errors,\n  security: state.security\n});\nexport default connect(\n  mapStateToProps,\n  { createNewUser }\n)(Register);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { login } from \"../../actions/securityActions\";\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      username: \"\",\n      password: \"\",\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const LoginRequest = {\n      username: this.state.username,\n      password: this.state.password\n    };\n\n    this.props.login(LoginRequest);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"login\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h1 className=\"display-4 text-center\">લોગીન</h1>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.username\n                    })}\n                    placeholder=\"યુઝરનેમ\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.onChange}\n                  />\n                  {errors.username && (\n                    <div className=\"invalid-feedback\">{errors.username}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.password\n                    })}\n                    placeholder=\"પાસવર્ડ\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChange}\n                  />\n                  {errors.password && (\n                    <div className=\"invalid-feedback\">{errors.password}</div>\n                  )}\n                </div>\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  login: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  security: state.security,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { login }\n)(Login);\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst SecuredRoute = ({ component: Component, security, ...otherProps }) => (\n  <Route\n    {...otherProps}\n    render={props =>\n      security.validToken === true ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to=\"/login\" />\n      )\n    }\n  />\n);\n\nSecuredRoute.propTypes = {\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  security: state.security\n});\n\nexport default connect(mapStateToProps)(SecuredRoute);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getBooks } from \"../actions/bookActions\";\nimport PropTypes from \"prop-types\";\nimport {\n  CLink,\n  CButton,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CDataTable\n  } from '@coreui/react'\nclass Library extends Component {\n  componentDidMount() {\n    this.props.getBooks();\n  }\n  onDeleteClick = id => {\n    this.props.deleteBook(id);\n  };\n\n  render() {\n    const { books } = this.props.book;\n\n    return (\n      <>\n       \n          <CCard>\n            <CCardHeader>\n            <center><h4>લાયબ્રેરી - <small>સત્સંગના પુસ્તકો અને પ્રસંગોની લાયબ્રેરી</small></h4></center>\n            </CCardHeader>\n            <CCardBody>\n            <CDataTable\n              items={books}\n              fields={fields}\n              striped\n              columnFilter\n              tableFilter\n              footer\n              itemsPerPageSelect\n              itemsPerPage={5}\n              hover\n              sorter\n              pagination\n              scopedSlots = {{\n                'id':\n                  (item)=>(\n                    <td>\n                      <CLink \n                        href={`/viewBook/${item.id}`}\n                        rel=\"noreferrer noopener\" \n                        className=\"card-header-action\"  >\n                        <CButton block className=\".btn-ghost-button\" size=\"sm\" color=\"success\">View</CButton>\n                      </CLink>\n                      <CLink \n                        href={`/exportBook/${item.id}`}\n                        rel=\"noreferrer noopener\" \n                        className=\"card-header-action\"  >\n                        <CButton block className=\".btn-ghost-button\" size=\"sm\" color=\"warning\">Export</CButton>\n                        </CLink>\n                      \n                    </td>\n                    \n                  )\n\n              }}\n            />\n            </CCardBody>\n          </CCard>\n        \n      </>\n    );\n  }\n}\nconst fields = ['bookName', 'bookEdition', 'author', 'pageNumber', 'subject', 'subSubject', 'reference', 'actor', 'village', 'birthDate', 'birthDateGuj', 'deathDate', 'deathDateGuj',  'eventDate', 'eventDateGuj', 'id'];\n\nLibrary.propTypes = {\n  book: PropTypes.object.isRequired,\n  getBooks: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  book: state.book\n});\n\nexport default connect(\n  mapStateToProps,\n  { getBooks }\n)(Library);","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { createBook } from \"../../actions/bookActions\";\nimport classnames from \"classnames\";\nimport Moment from 'moment';\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCardHeader,\n  CCol,\n  CForm,\n  CFormGroup,\n  CTextarea,\n  CInput,\n  CLabel,\n  CRow\n} from '@coreui/react'\nclass AddBook extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      bookName: \"\",\n      bookEdition: \"\",\n      pageNumber: \"\",\n      subject: \"\",\n      subSubject: \"\",\n      shlok: \"\",\n      event: \"\",\n      reference: \"\",\n      actor: \"\",\n      author: \"\",\n      village: \"\",\n      eventDate: \"\",\n      birthDate: \"\",\n      deathDate: \"\",\n      eventDateGuj: \"\",\n      birthDateGuj: \"\",\n      deathDateGuj: \"\",\n      comments: \"\",\n      errors: {}\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n\n  }\n\n  //life cycle hooks\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const newBook = {\n      bookName: this.state.bookName,\n      bookEdition: this.state.bookEdition,\n      pageNumber: this.state.pageNumber,\n      subject: this.state.subject,\n      subSubject: this.state.subSubject,\n      shlok: this.state.shlok,\n      event: this.state.event,\n      reference: this.state.reference,\n      actor: this.state.actor,\n      author: this.state.author,\n      village: this.state.village,\n      eventDate: this.state.eventDate,\n      birthDate: this.state.birthDate,\n      deathDate: this.state.deathDate,\n      eventDateGuj: this.state.eventDateGuj,\n      birthDateGuj: this.state.birthDateGuj,\n      deathDateGuj: this.state.deathDateGuj,\n      comments: this.state.comments\n    };\n    if (newBook.eventDate === 'Invalid date'){\n      newBook.eventDate = '';\n    }else if (newBook.eventDate !== ''){\n      newBook.eventDate = Moment(newBook.eventDate).format('DD-MMM-YYYY');\n    }\n    if (newBook.birthDate === 'Invalid date'){\n      newBook.birthDate = '';\n    }else if (newBook.birthDate !== ''){\n      newBook.birthDate = Moment(newBook.birthDate).format('DD-MMM-YYYY');\n    }\n    if (newBook.deathDate === 'Invalid date'){\n      newBook.deathDate = '';\n    }else if (newBook.deathDate !== ''){\n      newBook.deathDate = Moment(newBook.deathDate).format('DD-MMM-YYYY');\n    }\n    this.props.createBook(newBook, this.state.button, this.props.history);\n  }\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <>\n         <CCard>\n            <CCardHeader>\n            પુસ્તક\n              <small> - પ્રસંગ</small>\n            </CCardHeader>\n            <CCardBody>\n            <CForm onSubmit={this.onSubmit} encType=\"multipart/form-data\" className=\"form-horizontal\">\n\n            <CRow>\n              <CCol>\n                <CFormGroup>\n                  <CLabel htmlFor=\"bookName\">પુસ્તકનું નામ</CLabel>\n                  <CInput id=\"bookName\" \n                  className={classnames(\"form-control\", {\n                    \"is-invalid\": errors.bookName\n                  })} \n                  placeholder=\"પુસ્તકનું નામ\" \n                  name=\"bookName\" \n                  value={this.state.bookName}\n                  onChange={this.onChange} />\n                  {errors.bookName && (\n                    <div className=\"invalid-feedback\">\n                      {errors.bookName}\n                    </div>\n                  )}\n                </CFormGroup>\n              </CCol>\n              <CCol>\n                <CFormGroup>\n                  <CLabel htmlFor=\"bookEdition\">પુસ્તકની આવૃત્તિ</CLabel>\n                  <CInput id=\"bookEdition\" \n                  className={classnames(\"form-control\", {\n                    \"is-invalid\": errors.bookEdition\n                  })}\n                  placeholder=\"પુસ્તકની આવૃત્તિ\"\n                  name=\"bookEdition\"\n                  value={this.state.bookEdition}\n                  onChange={this.onChange}\n                />\n                {errors.bookEdition && (\n                  <div className=\"invalid-feedback\">\n                    {errors.bookEdition}\n                  </div>\n                )}\n                </CFormGroup>\n              </CCol>\n            \n              <CCol>\n                <CFormGroup>\n                  <CLabel htmlFor=\"pageNumber\">પાના નંબર</CLabel>\n                  <CInput id=\"pageNumber\" className={classnames(\"form-control\", {\n                    \"is-invalid\": errors.pageNumber\n                  })}\n                  placeholder=\"પાના નંબર\"\n                  name=\"pageNumber\"\n                  value={this.state.pageNumber}\n                  onChange={this.onChange}\n                />\n                {errors.pageNumber && (\n                  <div className=\"invalid-feedback\">\n                    {errors.pageNumber}\n                  </div>\n                )}\n                </CFormGroup>\n              </CCol>\n             \n            </CRow>\n            <CRow>\n              <CCol>\n                <CFormGroup>\n                  <CLabel htmlFor=\"subject\">મુખ્ય વિષય</CLabel>\n                  <CInput id=\"subject\" className={classnames(\"form-control\", {\n                    \"is-invalid\": errors.subject\n                  })}\n                  placeholder=\"મુખ્ય વિષય\"\n                  name=\"subject\"\n                  value={this.state.subject}\n                  onChange={this.onChange}\n                />\n                {errors.subject && (\n                  <div className=\"invalid-feedback\">\n                    {errors.subject}\n                  </div>\n                )}\n                </CFormGroup>\n              </CCol>\n              <CCol>\n                <CFormGroup>\n                  <CLabel htmlFor=\"subSubject\">પેટા વિષય</CLabel>\n                  <CInput id=\"subSubject\" className={classnames(\"form-control\", {\n                    \"is-invalid\": errors.subSubject\n                  })}\n                  placeholder=\"પેટા વિષય\"\n                  name=\"subSubject\"\n                  value={this.state.subSubject}\n                  onChange={this.onChange}\n                />\n                {errors.subSubject && (\n                  <div className=\"invalid-feedback\">\n                    {errors.subSubject}\n                  </div>\n                )}\n                </CFormGroup>\n              </CCol>\n              <CCol>\n                <CFormGroup>\n                  <CLabel htmlFor=\"reference\">સંદર્ભ</CLabel>\n                  <CInput id=\"reference\" className={classnames(\"form-control\", {\n                    \"is-invalid\": errors.reference\n                  })}\n                  placeholder=\"સંદર્ભ\"\n                  name=\"reference\"\n                  value={this.state.reference}\n                  onChange={this.onChange}\n                  />\n                    {errors.reference && (\n                      <div className=\"invalid-feedback\">\n                        {errors.reference}\n                      </div>\n                    )}\n\n                </CFormGroup>\n              </CCol>\n              </CRow>\n              <CRow>\n                <CCol>\n                  <CFormGroup>\n                    <CLabel htmlFor=\"eventDate\">પ્રસંગની તારીખ</CLabel>\n                    <CInput type=\"date\" id=\"eventDate\" \n                    className=\"form-control\" name=\"eventDate\" \n                    value={this.state.eventDate}\n                    onChange={this.onChange}\n                  />\n                  </CFormGroup>\n                </CCol>\n                \n                <CCol>\n                  <CFormGroup>\n                    <CLabel htmlFor=\"eventDateGuj\">પ્રસંગની ગુજરાતી તારીખ</CLabel>\n                    <CInput id=\"eventDateGuj\" className={classnames(\"form-control\", {\n                      \"is-invalid\": errors.eventDateGuj\n                    })}\n                    placeholder=\"પ્રસંગની ગુજરાતી તારીખ\"\n                    name=\"eventDateGuj\"\n                    value={this.state.eventDateGuj}\n                    onChange={this.onChange}\n                  />\n                  {errors.eventDateGuj && (\n                    <div className=\"invalid-feedback\">\n                      {errors.eventDateGuj}\n                    </div>\n                  )}\n                  </CFormGroup>\n                </CCol>\n                <CCol>\n                <CFormGroup>\n                  <CLabel htmlFor=\"author\">પ્રસંગના લેખક</CLabel>\n                  <CInput id=\"author\" className={classnames(\"form-control\", {\n                    \"is-invalid\": errors.author\n                  })}\n                  placeholder=\"લેખક\"\n                  name=\"author\"\n                  value={this.state.author}\n                  onChange={this.onChange}\n                />\n                {errors.author && (\n                  <div className=\"invalid-feedback\">\n                    {errors.author}\n                  </div>\n                )}\n                </CFormGroup>\n              </CCol>\n              </CRow>\n\n              <CRow>\n                <CCol>\n                  <CFormGroup>\n                    <CLabel htmlFor=\"shlok\">શ્લોક / સાખી</CLabel>\n                    <CTextarea \n                      id=\"shlok\" \n                      rows=\"2\"\n                      className={classnames(\"form-control\", {\n                        \"is-invalid\": errors.shlok\n                      })}\n                      placeholder=\"શ્લોક / સાખી\"\n                      name=\"shlok\"\n                      value={this.state.shlok}\n                      onChange={this.onChange}\n                    />\n                    {errors.shlok && (\n                      <div className=\"invalid-feedback\">\n                        {errors.shlok}\n                      </div>\n                    )}\n                  </CFormGroup>\n                </CCol>\n                <CCol>\n              <CFormGroup>\n                <CLabel htmlFor=\"comments\">વિશેષ નોંધ</CLabel>\n                <CTextarea \n                  id=\"comments\"   \n                  rows=\"2\" className={classnames(\"form-control\", {\n                  \"is-invalid\": errors.comments\n                })}\n                placeholder=\"વિશેષ નોંધ\"\n                name=\"comments\"\n                value={this.state.comments}\n                onChange={this.onChange}\n              />\n              {errors.comments && (\n                <div className=\"invalid-feedback\">\n                  {errors.comments}\n                </div>\n              )}\n              </CFormGroup>\n              </CCol>\n              </CRow>\n              <CRow>\n                <CCol>\n              <CFormGroup>\n                <CLabel htmlFor=\"country\">પ્રસંગ</CLabel>\n                <CTextarea \n                      name=\"event\" \n                      id=\"event\" \n                      rows=\"5\"\n                      className={classnames(\"form-control\", {\n                        \"is-invalid\": errors.event\n                      })}\n                      placeholder=\"પ્રસંગ\"\n                      value={this.state.event}\n                      onChange={this.onChange}\n                    />\n                    {errors.event && (\n                      <div className=\"invalid-feedback\">\n                        {errors.event}\n                      </div>\n                    )}\n              </CFormGroup>\n              </CCol>\n              </CRow>\n              <CRow>\n              <CCol>\n                <CFormGroup>\n                  <CLabel htmlFor=\"actor\">પાત્રનું નામ</CLabel>\n                  <CInput id=\"actor\" className={classnames(\"form-control\", {\n                    \"is-invalid\": errors.actor\n                  })}\n                  placeholder=\"પાત્રનું નામ\"\n                  name=\"actor\"\n                  value={this.state.actor}\n                  onChange={this.onChange}\n                />\n                {errors.actor && (\n                  <div className=\"invalid-feedback\">\n                    {errors.actor}\n                  </div>\n                )}\n                </CFormGroup>\n              </CCol>\n              <CCol>\n                <CFormGroup>\n                  <CLabel htmlFor=\"village\">પાત્રનું ગામ</CLabel>\n                  <CInput id=\"village\" className={classnames(\"form-control\", {\n                    \"is-invalid\": errors.village\n                  })}\n                  placeholder=\"પાત્રનું ગામ\"\n                  name=\"village\"\n                  value={this.state.village}\n                  onChange={this.onChange}\n                />\n                {errors.village && (\n                  <div className=\"invalid-feedback\">\n                    {errors.village}\n                  </div>\n                )}\n                </CFormGroup>\n              </CCol>\n            \n              <CCol>\n                <CFormGroup>\n                  <CLabel htmlFor=\"birthDate\">પાત્રની જન્મ તારીખ</CLabel>\n                  <CInput type=\"date\" id=\"birthDate\" \n                  name=\"birthDate\" className=\"form-control\"\n                  value={this.state.birthDate}\n                  onChange={this.onChange}\n                />\n                </CFormGroup>\n              </CCol>\n             \n            </CRow>\n            <CRow>\n              <CCol>\n                <CFormGroup>\n                  <CLabel htmlFor=\"birthDateGuj\">પાત્રની ગુજરાતી જન્મ તારીખ</CLabel>\n                  <CInput id=\"birthDateGuj\" className={classnames(\"form-control\", {\n                    \"is-invalid\": errors.birthDateGuj\n                  })}\n                  placeholder=\"પાત્રની ગુજરાતી જન્મ તારીખ\"\n                  name=\"birthDateGuj\"\n                  value={this.state.birthDateGuj}\n                  onChange={this.onChange}\n                />\n                {errors.birthDateGuj && (\n                  <div className=\"invalid-feedback\">\n                    {errors.birthDateGuj}\n                  </div>\n                )}\n                </CFormGroup>\n              </CCol>\n             \n            <CCol>\n              <CFormGroup>\n                <CLabel htmlFor=\"deathDate\">પાત્રની મૃત્યુ તારીખ</CLabel>\n                <CInput type=\"date\" id=\"deathDate\" \n                className=\"form-control\"\n                name=\"deathDate\"\n                value={this.state.deathDate}\n                onChange={this.onChange}\n              />\n              </CFormGroup>\n            </CCol>\n          \n            <CCol>\n              <CFormGroup>\n                <CLabel htmlFor=\"deathDateGuj\">પાત્રની ગુજરાતી મૃત્યુ તારીખ</CLabel>\n                <CInput id=\"deathDateGuj\" className={classnames(\"form-control\", {\n                  \"is-invalid\": errors.deathDateGuj\n                })}\n                placeholder=\"પાત્રની ગુજરાતી મૃત્યુ તારીખ\"\n                name=\"deathDateGuj\"\n                value={this.state.deathDateGuj}\n                onChange={this.onChange}\n              />\n              {errors.deathDateGuj && (\n                <div className=\"invalid-feedback\">\n                  {errors.deathDateGuj}\n                </div>\n              )}\n              </CFormGroup>\n            </CCol>\n            </CRow>\n            <CCardFooter>\n            <CRow>\n            <CCol></CCol>\n            <CCol></CCol>\n            <CCol>\n              <CButton type=\"submit\" size=\"sm\" onClick={this.onChange} value=\"continue\" name=\"button\" color=\"primary\">Save & Continue</CButton>\n            </CCol>\n            <CCol>\n              <CButton type=\"submit\" size=\"sm\" onClick={this.onChange} value=\"close\" name=\"button\" color=\"primary\">Save & Close</CButton>\n              </CCol><CCol>\n              <CButton type=\"back\" size=\"sm\" onClick={this.onChange} value=\"back\" name=\"button\" color=\"info\">Back</CButton>\n            \n              </CCol>\n              <CCol></CCol>\n              <CCol></CCol>\n            </CRow>\n            </CCardFooter>\n          </CForm>\n        </CCardBody>\n      </CCard>\n         \n    </>\n\n     \n\n\n    );\n  }\n}\n\nAddBook.propTypes = {\n  createBook: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { createBook }\n)(AddBook);\n","import React, { Component } from \"react\";\nimport { getBook, createBook } from \"../../actions/bookActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport Moment from 'moment';\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCardHeader,\n  CCol,\n  CForm,\n  CFormGroup,\n  CTextarea,\n  CInput,\n  CLabel,\n  CRow\n} from '@coreui/react'\n\nclass UpdateBook extends Component {\n  //set state\n  constructor() {\n    super();\n\n    this.state = {\n      bookName: \"\",\n      bookEdition: \"\",\n      pageNumber: \"\",\n      subject: \"\",\n      subSubject: \"\",\n      shlok: \"\",\n      event: \"\",\n      reference: \"\",\n      actor: \"\",\n      author: \"\",\n      village: \"\",\n      eventDate: \"\",\n      birthDate: \"\",\n      deathDate: \"\",\n      eventDateGuj: \"\",\n      birthDateGuj: \"\",\n      deathDateGuj: \"\",\n      comments: \"\",\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n    const {\n      id,\n      bookName,\n      bookEdition,\n      pageNumber,\n      subject,\n      subSubject,\n      shlok,\n      event,\n      reference,\n      actor,\n      author,\n      village,\n      eventDate,\n      birthDate,\n      deathDate,\n      eventDateGuj,\n      birthDateGuj,\n      deathDateGuj,\n      comments\n    } = nextProps.book;\n\n    if (nextProps.book.eventDate !== null){\n      this.setState({ eventDate: Moment(eventDate).format('YYYY-MM-DD') });\n    }\n    if (nextProps.book.birthDate !== null){\n      this.setState({ birthDate: Moment(birthDate).format('YYYY-MM-DD') });\n    }\n    if (nextProps.book.deathDate !== null){\n      this.setState({ deathDate: Moment(deathDate).format('YYYY-MM-DD') });\n    }\n    this.setState({\n      id,\n      bookName,\n      bookEdition,\n      pageNumber,\n      subject,\n      subSubject,\n      shlok,\n      event,\n      reference,\n      actor,\n      author,\n      village,\n      eventDateGuj,\n      birthDateGuj,\n      deathDateGuj,\n      comments\n    });\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.props.getBook(id, this.props.history);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const updateBook = {\n      id: this.state.id,\n      bookName: this.state.bookName,\n      bookEdition: this.state.bookEdition,\n      pageNumber: this.state.pageNumber,\n      subject: this.state.subject,\n      subSubject: this.state.subSubject,\n      shlok: this.state.shlok,\n      event: this.state.event,\n      reference: this.state.reference,\n      actor: this.state.actor,\n      author: this.state.author,\n      village: this.state.village,\n      eventDate: this.state.eventDate,\n      birthDate: this.state.birthDate,\n      deathDate: this.state.deathDate,\n      eventDateGuj: this.state.eventDateGuj,\n      birthDateGuj: this.state.birthDateGuj,\n      deathDateGuj: this.state.deathDateGuj,\n      comments: this.state.comments\n    };\n    if (updateBook.eventDate === 'Invalid date'){\n      updateBook.eventDate = '';\n    }else if (updateBook.eventDate !== ''){\n      updateBook.eventDate = Moment(updateBook.eventDate).format('DD-MMM-YYYY');\n    }\n    if (updateBook.birthDate === 'Invalid date'){\n      updateBook.birthDate = '';\n    }else if (updateBook.birthDate !== ''){\n      updateBook.birthDate = Moment(updateBook.birthDate).format('DD-MMM-YYYY');\n    }\n    if (updateBook.deathDate === 'Invalid date'){\n      updateBook.deathDate = '';\n    }else if (updateBook.deathDate !== ''){\n      updateBook.deathDate = Moment(updateBook.deathDate).format('DD-MMM-YYYY');\n    }\n\n    this.props.createBook(updateBook, this.state.button, this.props.history);\n  }\n \n  render() {   \n    const { errors } = this.state;\n    return (\n      <>\n         <CCard>\n            <CCardHeader>\n            પુસ્તક\n              <small> - પ્રસંગ</small>\n            </CCardHeader>\n            <CCardBody>\n            <CForm onSubmit={this.onSubmit} encType=\"multipart/form-data\" className=\"form-horizontal\">\n\n            <CRow>\n              <CCol>\n                <CFormGroup>\n                  <CLabel htmlFor=\"bookName\">પુસ્તકનું નામ</CLabel>\n                  <CInput id=\"bookName\" \n                  className={classnames(\"form-control\", {\n                    \"is-invalid\": errors.bookName\n                  })} \n                  placeholder=\"પુસ્તકનું નામ\" \n                  name=\"bookName\" \n                  value={this.state.bookName}\n                  onChange={this.onChange} />\n                  {errors.bookName && (\n                    <div className=\"invalid-feedback\">\n                      {errors.bookName}\n                    </div>\n                  )}\n                </CFormGroup>\n              </CCol>\n              <CCol>\n                <CFormGroup>\n                  <CLabel htmlFor=\"bookEdition\">પુસ્તકની આવૃત્તિ</CLabel>\n                  <CInput id=\"bookEdition\" \n                  className={classnames(\"form-control\", {\n                    \"is-invalid\": errors.bookEdition\n                  })}\n                  placeholder=\"પુસ્તકની આવૃત્તિ\"\n                  name=\"bookEdition\"\n                  value={this.state.bookEdition}\n                  onChange={this.onChange}\n                />\n                {errors.bookEdition && (\n                  <div className=\"invalid-feedback\">\n                    {errors.bookEdition}\n                  </div>\n                )}\n                </CFormGroup>\n              </CCol>\n            \n              <CCol>\n                <CFormGroup>\n                  <CLabel htmlFor=\"pageNumber\">પાના નંબર</CLabel>\n                  <CInput id=\"pageNumber\" className={classnames(\"form-control\", {\n                    \"is-invalid\": errors.pageNumber\n                  })}\n                  placeholder=\"પાના નંબર\"\n                  name=\"pageNumber\"\n                  value={this.state.pageNumber}\n                  onChange={this.onChange}\n                />\n                {errors.pageNumber && (\n                  <div className=\"invalid-feedback\">\n                    {errors.pageNumber}\n                  </div>\n                )}\n                </CFormGroup>\n              </CCol>\n             \n            </CRow>\n            <CRow>\n              <CCol>\n                <CFormGroup>\n                  <CLabel htmlFor=\"subject\">મુખ્ય વિષય</CLabel>\n                  <CInput id=\"subject\" className={classnames(\"form-control\", {\n                    \"is-invalid\": errors.subject\n                  })}\n                  placeholder=\"મુખ્ય વિષય\"\n                  name=\"subject\"\n                  value={this.state.subject}\n                  onChange={this.onChange}\n                />\n                {errors.subject && (\n                  <div className=\"invalid-feedback\">\n                    {errors.subject}\n                  </div>\n                )}\n                </CFormGroup>\n              </CCol>\n              <CCol>\n                <CFormGroup>\n                  <CLabel htmlFor=\"subSubject\">પેટા વિષય</CLabel>\n                  <CInput id=\"subSubject\" className={classnames(\"form-control\", {\n                    \"is-invalid\": errors.subSubject\n                  })}\n                  placeholder=\"પેટા વિષય\"\n                  name=\"subSubject\"\n                  value={this.state.subSubject}\n                  onChange={this.onChange}\n                />\n                {errors.subSubject && (\n                  <div className=\"invalid-feedback\">\n                    {errors.subSubject}\n                  </div>\n                )}\n                </CFormGroup>\n              </CCol>\n              <CCol>\n                <CFormGroup>\n                  <CLabel htmlFor=\"reference\">સંદર્ભ</CLabel>\n                  <CInput id=\"reference\" className={classnames(\"form-control\", {\n                    \"is-invalid\": errors.reference\n                  })}\n                  placeholder=\"સંદર્ભ\"\n                  name=\"reference\"\n                  value={this.state.reference}\n                  onChange={this.onChange}\n                  />\n                    {errors.reference && (\n                      <div className=\"invalid-feedback\">\n                        {errors.reference}\n                      </div>\n                    )}\n\n                </CFormGroup>\n              </CCol>\n              </CRow>\n              <CRow>\n                <CCol>\n                  <CFormGroup>\n                    <CLabel htmlFor=\"eventDate\">પ્રસંગની તારીખ</CLabel>\n                    <CInput type=\"date\" id=\"eventDate\" \n                    className=\"form-control\" name=\"eventDate\" \n                    value={this.state.eventDate}\n                    onChange={this.onChange}\n                  />\n                  </CFormGroup>\n                </CCol>\n                \n                <CCol>\n                  <CFormGroup>\n                    <CLabel htmlFor=\"eventDateGuj\">પ્રસંગની ગુજરાતી તારીખ</CLabel>\n                    <CInput id=\"eventDateGuj\" className={classnames(\"form-control\", {\n                      \"is-invalid\": errors.eventDateGuj\n                    })}\n                    placeholder=\"પ્રસંગની ગુજરાતી તારીખ\"\n                    name=\"eventDateGuj\"\n                    value={this.state.eventDateGuj}\n                    onChange={this.onChange}\n                  />\n                  {errors.eventDateGuj && (\n                    <div className=\"invalid-feedback\">\n                      {errors.eventDateGuj}\n                    </div>\n                  )}\n                  </CFormGroup>\n                </CCol>\n                <CCol>\n                <CFormGroup>\n                  <CLabel htmlFor=\"author\">પ્રસંગના લેખક</CLabel>\n                  <CInput id=\"author\" className={classnames(\"form-control\", {\n                    \"is-invalid\": errors.author\n                  })}\n                  placeholder=\"લેખક\"\n                  name=\"author\"\n                  value={this.state.author}\n                  onChange={this.onChange}\n                />\n                {errors.author && (\n                  <div className=\"invalid-feedback\">\n                    {errors.author}\n                  </div>\n                )}\n                </CFormGroup>\n              </CCol>\n              </CRow>\n\n              <CRow>\n                <CCol>\n                  <CFormGroup>\n                    <CLabel htmlFor=\"shlok\">શ્લોક / સાખી</CLabel>\n                    <CTextarea \n                      id=\"shlok\" \n                      rows=\"2\"\n                      className={classnames(\"form-control\", {\n                        \"is-invalid\": errors.shlok\n                      })}\n                      placeholder=\"શ્લોક / સાખી\"\n                      name=\"shlok\"\n                      value={this.state.shlok}\n                      onChange={this.onChange}\n                    />\n                    {errors.shlok && (\n                      <div className=\"invalid-feedback\">\n                        {errors.shlok}\n                      </div>\n                    )}\n                  </CFormGroup>\n                </CCol>\n                <CCol>\n              <CFormGroup>\n                <CLabel htmlFor=\"comments\">વિશેષ નોંધ</CLabel>\n                <CTextarea \n                  id=\"comments\"   \n                  rows=\"2\" className={classnames(\"form-control\", {\n                  \"is-invalid\": errors.comments\n                })}\n                placeholder=\"વિશેષ નોંધ\"\n                name=\"comments\"\n                value={this.state.comments}\n                onChange={this.onChange}\n              />\n              {errors.comments && (\n                <div className=\"invalid-feedback\">\n                  {errors.comments}\n                </div>\n              )}\n              </CFormGroup>\n              </CCol>\n              </CRow>\n              <CRow>\n                <CCol>\n              <CFormGroup>\n                <CLabel htmlFor=\"country\">પ્રસંગ</CLabel>\n                <CTextarea \n                      id=\"event\" \n                      rows=\"5\"\n                      className={classnames(\"form-control\", {\n                        \"is-invalid\": errors.event\n                      })}\n                      placeholder=\"પ્રસંગ\"\n                      name=\"event\"\n                      value={this.state.event}\n                      onChange={this.onChange}\n                    />\n                    {errors.event && (\n                      <div className=\"invalid-feedback\">\n                        {errors.event}\n                      </div>\n                    )}\n              </CFormGroup>\n              </CCol>\n              </CRow>\n              <CRow>\n              <CCol>\n                <CFormGroup>\n                  <CLabel htmlFor=\"actor\">પાત્રનું નામ</CLabel>\n                  <CInput id=\"actor\" className={classnames(\"form-control\", {\n                    \"is-invalid\": errors.actor\n                  })}\n                  placeholder=\"પાત્રનું નામ\"\n                  name=\"actor\"\n                  value={this.state.actor}\n                  onChange={this.onChange}\n                />\n                {errors.actor && (\n                  <div className=\"invalid-feedback\">\n                    {errors.actor}\n                  </div>\n                )}\n                </CFormGroup>\n              </CCol>\n              <CCol>\n                <CFormGroup>\n                  <CLabel htmlFor=\"village\">પાત્રનું ગામ</CLabel>\n                  <CInput id=\"village\" className={classnames(\"form-control\", {\n                    \"is-invalid\": errors.village\n                  })}\n                  placeholder=\"પાત્રનું ગામ\"\n                  name=\"village\"\n                  value={this.state.village}\n                  onChange={this.onChange}\n                />\n                {errors.village && (\n                  <div className=\"invalid-feedback\">\n                    {errors.village}\n                  </div>\n                )}\n                </CFormGroup>\n              </CCol>\n            \n              <CCol>\n                <CFormGroup>\n                  <CLabel htmlFor=\"birthDate\">પાત્રની જન્મ તારીખ</CLabel>\n                  <CInput type=\"date\" id=\"birthDate\" \n                  name=\"birthDate\" className=\"form-control\"\n                  value={this.state.birthDate}\n                  onChange={this.onChange}\n                />\n                </CFormGroup>\n              </CCol>\n             \n            </CRow>\n            <CRow>\n              <CCol>\n                <CFormGroup>\n                  <CLabel htmlFor=\"birthDateGuj\">પાત્રની ગુજરાતી જન્મ તારીખ</CLabel>\n                  <CInput id=\"birthDateGuj\" className={classnames(\"form-control\", {\n                    \"is-invalid\": errors.birthDateGuj\n                  })}\n                  placeholder=\"પાત્રની ગુજરાતી જન્મ તારીખ\"\n                  name=\"birthDateGuj\"\n                  value={this.state.birthDateGuj}\n                  onChange={this.onChange}\n                />\n                {errors.birthDateGuj && (\n                  <div className=\"invalid-feedback\">\n                    {errors.birthDateGuj}\n                  </div>\n                )}\n                </CFormGroup>\n              </CCol>\n             \n            <CCol>\n              <CFormGroup>\n                <CLabel htmlFor=\"deathDate\">પાત્રની મૃત્યુ તારીખ</CLabel>\n                <CInput type=\"date\" id=\"deathDate\" \n                className=\"form-control\"\n                name=\"deathDate\"\n                value={this.state.deathDate}\n                onChange={this.onChange}\n              />\n              </CFormGroup>\n            </CCol>\n          \n            <CCol>\n              <CFormGroup>\n                <CLabel htmlFor=\"deathDateGuj\">પાત્રની ગુજરાતી મૃત્યુ તારીખ</CLabel>\n                <CInput id=\"deathDateGuj\" className={classnames(\"form-control\", {\n                  \"is-invalid\": errors.deathDateGuj\n                })}\n                placeholder=\"પાત્રની ગુજરાતી મૃત્યુ તારીખ\"\n                name=\"deathDateGuj\"\n                value={this.state.deathDateGuj}\n                onChange={this.onChange}\n              />\n              {errors.deathDateGuj && (\n                <div className=\"invalid-feedback\">\n                  {errors.deathDateGuj}\n                </div>\n              )}\n              </CFormGroup>\n            </CCol>\n            </CRow>\n            <CCardFooter>\n            <CRow>\n            <CCol></CCol>\n            <CCol></CCol>\n            <CCol>\n              <CButton type=\"submit\" size=\"sm\" onClick={this.onChange} value=\"close\" name=\"button\" color=\"primary\">પુસ્તકમાં સુધારો</CButton>\n            </CCol>\n            <CCol>\n              <CButton type=\"back\" size=\"sm\" onClick={toggleFade} value=\"back\" name=\"button\" color=\"info\">પાછળ  જવા</CButton>\n                           \n            </CCol>\n            <CCol></CCol>\n            <CCol></CCol>\n            </CRow>\n            </CCardFooter>\n          </CForm>\n        </CCardBody>\n      </CCard>\n         \n    </>\n\n      \n    );\n  }\n}\n\nconst toggleFade = () => {\n  window.history.back();\n}\nUpdateBook.propTypes = {\n  getBook: PropTypes.func.isRequired,\n  createBook: PropTypes.func.isRequired,\n  book: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  book: state.book.book,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { getBook, createBook }\n)(UpdateBook);\n","import React from 'react'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCardFooter,\n  CRow,\n  CCol,\n  CLink\n} from '@coreui/react'\nimport * as htmlToImage from 'html-to-image';\nimport jsPDF from 'jspdf';\n\nconst Popovers = (data) => {\n \n  const toggleFade = () => {\n    window.history.back();\n  };\n\n  const printPDF = () => {\n    htmlToImage.toPng(document.getElementById('exportContent'), { quality: 0.95 })\n        .then(function (dataUrl) {\n          var link = document.createElement('a');\n          link.download = 'my-image-name.jpeg';\n          const pdf = new jsPDF();\n          const imgProps= pdf.getImageProperties(dataUrl);\n          const pdfWidth = pdf.internal.pageSize.getWidth();\n          const pdfHeight = (imgProps.height * pdfWidth) / imgProps.width;\n          pdf.addImage(dataUrl, 'PNG', 0, 0,pdfWidth, pdfHeight);\n          pdf.save(\"download.pdf\"); \n        });\n  };\n\n  \n  return (\n    <div id=\"exportContent\">\n      <CCard>\n        <CCardHeader>\n        <CRow>\n        <CCol><small>પુસ્તક: </small> <label>{data.bookName}</label></CCol> \n        <CCol> <small>આવૃત્તિ: </small> <label>{data.bookEdition}</label></CCol> \n        <CCol><small> પાના નંબર: </small><label>{data.pageNumber}</label></CCol>\n       </CRow>\n        </CCardHeader>\n        <CCardBody>\n          <CRow>\n            <CCol md=\"0\">\n            <label className=\"text-left text-muted\">પાત્ર:</label>\n            </CCol>\n            <CCol md=\"3\">\n            <text className=\"muted\">{data.actor}</text>\n            </CCol>\n           \n            <CCol md=\"0\">\n            <label className=\"text-left text-muted\">જન્મ તારીખ:</label>\n            </CCol>\n            <CCol md=\"3\">\n            <text className=\"muted\">\n            {data.birthDate} \n            </text>\n            </CCol>\n            <CCol md=\"0\">\n            <label className=\"text-left text-muted\">જન્મ ગુજરાતી તારીખ:</label>\n            </CCol>\n            <CCol md=\"3\">\n            <text className=\"muted\">\n            {data.birthDateGuj}\n            </text>\n            </CCol>\n            \n          \n          </CRow>\n          <CRow>\n          <CCol md=\"0\">\n          <label className=\"text-left text-muted\">ગામ:</label>\n          </CCol>\n          <CCol md=\"3\"  className=\"text-left muted\" >\n          <text className=\"muted\">{data.village}</text>\n          </CCol>\n          <CCol md=\"0\">\n            <label className=\"text-left text-muted\">મૃત્યુ તારીખ:</label>\n            </CCol>\n            <CCol md=\"3\">\n            <text className=\"muted\">\n            {data.deathDate}\n            </text>\n          </CCol>\n          <CCol md=\"0\">\n            <label className=\"text-left text-muted\">મૃત્યુ ગુજરાતી તારીખ:</label>\n            </CCol>\n            <CCol md=\"3\">\n            <text className=\"muted\">\n              {data.deathDateGuj}\n            </text>\n            </CCol>\n          </CRow>\n        </CCardBody>\n      </CCard>\n      <CCard>\n      <CCardHeader>\n       <CRow>\n        <CCol><small>મુખ્ય વિષય: </small>  <label>{data.subject}</label></CCol> \n        <CCol><small>પેટા વિષય: </small><label>{data.subSubject}</label></CCol>\n       </CRow>\n       </CCardHeader>\n       <CCardBody>\n          <label className=\"text-muted\">સંદર્ભ : </label> \n          <text className=\"muted\"> {data.reference}</text>\n          <hr />\n          <label className=\"text-muted\">વિશેષ નોંધ : </label> \n          <text className=\"muted\"> {data.comments}</text>\n          <hr />\n          <label className=\"text-muted\">શ્લોક / સાખી : </label> \n        <text className=\"muted\"> {data.shlok}</text>\n       </CCardBody>  \n      \n    </CCard>\n    \n      <CCard>\n        <CCardHeader>\n        <CRow>\n        <CCol  md=\"2\"><label>પ્રસંગ</label> </CCol> \n        <CCol  md=\"4\"> <small>પ્રસંગની તારીખ: </small> <label>{data.eventDate}</label></CCol> \n        <CCol  md=\"4\"> <small>પ્રસંગની ગુજરાતી તારીખ: </small> <label>{data.eventDateGuj}</label></CCol> \n        <CCol  md=\"2\"><small> પ્રસંગના લેખક: </small><label>{data.author}</label></CCol>\n       </CRow>\n        </CCardHeader>\n        <CCardBody>\n       {data.event}\n        </CCardBody>\n        <CCardFooter>\n        <center>\n        <CRow>\n        <CCol md=\"4\"></CCol>\n\n        <CCol md=\"1\">\n        <CLink \n        href={`/exportBook/${data.id}`}\n        rel=\"noreferrer noopener\" \n        className=\"card-header-action\"  >\n        <CButton color=\"info\">Word</CButton>\n        </CLink>\n        </CCol>\n        <CCol md=\"1\">\n        <CButton onClick={printPDF} color=\"warning\">PDF</CButton>\n        </CCol>\n          <CCol  md=\"2\">\n          <CButton color=\"primary\" onClick={toggleFade}>પાછળ  જવા</CButton>\n          </CCol>\n          <CCol md=\"4\"></CCol>\n          </CRow>\n        </center>\n      </CCardFooter>\n      </CCard>\n    </div>\n  )\n}\n\nexport default Popovers\n","import React, { Component } from \"react\";\nimport { getBook } from \"../../actions/bookActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport Popovers from \"../Popovers\";\n\n\n\nclass ViewBook extends Component {\n  //set state\n  constructor() {\n    super();\n\n    this.state = {\n      bookName: \"\",\n      bookEdition: \"\",\n      pageNumber: \"\",\n      subject: \"\",\n      subSubject: \"\",\n      shlok: \"\",\n      event: \"\",\n      reference: \"\",\n      actor: \"\",\n      author: \"\",\n      village: \"\",\n      eventDate: \"\",\n      birthDate: \"\",\n      deathDate: \"\",\n      eventDateGuj: \"\",\n      birthDateGuj: \"\",\n      deathDateGuj: \"\",\n      comments: \"\",\n      errors: {}\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n    const {\n      id,\n      bookName,\n      bookEdition,\n      pageNumber,\n      subject,\n      subSubject,\n      shlok,\n      event,\n      reference,\n      actor,\n      author,\n      village,\n      eventDate,\n      birthDate,\n      deathDate,\n      eventDateGuj,\n      birthDateGuj,\n      deathDateGuj,\n      comments\n    } = nextProps.book;\n\n    this.setState({\n      id,\n      bookName,\n      bookEdition,\n      pageNumber,\n      subject,\n      subSubject,\n      shlok,\n      event,\n      reference,\n      actor,\n      author,\n      village,\n      eventDate,\n      birthDate,\n      deathDate,\n      eventDateGuj,\n      birthDateGuj,\n      deathDateGuj,\n      comments\n    });\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.props.getBook(id, this.props.history);\n  }\n \n  render() {\n   \n      return (\n        <Popovers bookName={this.state.bookName} author={this.state.author} \n        bookEdition={this.state.bookEdition}  pageNumber={this.state.pageNumber} \n        subject={this.state.subject} subSubject={this.state.subSubject}\n        shlok={this.state.shlok} event={this.state.event} \n        comments={this.state.comments} reference={this.state.reference} \n        actor={this.state.actor} village={this.state.village}\n        eventDate={this.state.eventDate} eventDateGuj={this.state.eventDateGuj} \n        birthDate={this.state.birthDate} birthDateGuj={this.state.birthDateGuj} \n        deathDate={this.state.deathDate} deathDateGuj={this.state.deathDateGuj}\n        id={this.state.id} />\n\n    );\n  }\n}\n\n\nViewBook.propTypes = {\n  getBook: PropTypes.func.isRequired,\n  book: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  book: state.book.book,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { getBook }\n)(ViewBook);\n","import React, { Component } from \"react\";\nimport { getBookContent } from \"../../actions/bookActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { CLink, CButton, CTextarea } from '@coreui/react';\n\nclass BookContent extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      id: \"\",\n      shlok: \"\",\n      event: \"\",\n      errors: {}\n    };\n    \n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n    const {\n      id,\n      shlok,\n      event\n    } = nextProps.bookContent;\n\n    this.setState({\n      id,\n      shlok,\n      event\n    });\n  }\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    console.log(\"componentDidMount: \"+id);\n    this.props.getBookContent(id, this.props.history);\n  }\n\n  \n  render() {\n    return (\n      <div>\n      <div className=\"book\">\n          <div className=\"container\">\n            <div className=\"row\">\n              \n                <div className=\"col-md-10 m-auto\">\n                <h6 className=\"display-6 text-center\">{this.state.bookName} - {this.state.bookEdition} </h6>\n               <hr/>\n                </div>\n                </div>\n                \n               \n                  <div className=\"row\">\n                <div className=\"col-md-2 m-auto\">\n                <label className=\"display-6 text-left\">Page Number: </label>\n                </div>\n              <div className=\"col-md-4 m-auto\">\n              <label className=\"display-6 text-left\">{this.state.pageNumber}</label>\n\n                  </div>\n                  <div className=\"col-md-2 m-auto\">\n                <label className=\"display-6 text-left\">Sandarbh: </label>\n                </div>\n              <div className=\"col-md-4 m-auto\">\n             \n              <label className=\"display-6 text-left\">{this.state.reference}</label>\n\n                  </div></div>\n                  <div className=\"row\">\n                  <div className=\"col-md-2 m-auto\">\n                  <label className=\"display-6 text-left\">Subject (Vishay): </label>\n                  </div>\n                <div className=\"col-md-4 m-auto\">\n                <label className=\"display-6 text-left\">{this.state.subject}</label>\n\n                </div>\n                <div className=\"col-md-2 m-auto\">\n                <label className=\"display-6 text-left\">Prasang Date: </label>\n                </div>\n                <div className=\"col-md-4 m-auto\">\n                <label className=\"display-6 text-left\">{this.state.eventDate}</label>\n\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-md-2 m-auto\">\n                <label className=\"display-6 text-left\">Patra (Character): </label>\n                </div>\n              <div className=\"col-md-4 m-auto\">\n              <label className=\"display-6 text-left\">{this.state.actor}</label>\n\n              \n              </div>\n              <div className=\"col-md-2 m-auto\">\n              <label className=\"display-6 text-left\">Gaam (Village): </label>\n              </div>\n              <div className=\"col-md-4 m-auto\">\n              <label className=\"display-6 text-left\">{this.state.village}</label>\n\n              \n              </div>\n              </div>\n              <div className=\"row\">\n              <div className=\"col-md-2 m-auto\">\n              <label className=\"display-6 text-left\">Birth Date: </label>\n              </div>\n            <div className=\"col-md-4 m-auto\">\n            <label className=\"display-6 text-left\">{this.state.birthDate}</label>\n            </div>\n            <div className=\"col-md-2 m-auto\">\n            <label className=\"display-6 text-left\">Death Date: </label>\n            </div>\n            <div className=\"col-md-4 m-auto\">\n            <label className=\"display-6 text-left\">{this.state.deathDate}</label>\n\n           \n            </div>\n            </div>\n              <div className=\"row\">\n                <div className=\"col-md-2 m-auto\">\n                <label className=\"display-8 text-center\">Shlok:</label>\n                </div>\n              <div className=\"col-md-10 m-auto\">\n                  <CTextarea \n                    name=\"textarea-input\" \n                    id=\"textarea-input\" \n                    rows=\"3\"\n                    value={this.state.shlok} />\n                    \n                    \n                 </div></div>\n                 <div className=\"row\">\n                <div className=\"col-md-2 m-auto\">\n                <label className=\"display-8 text-center\">Prasang (Event):</label>\n                </div>\n              <div className=\"col-md-10 m-auto\">\n                 \n              <CTextarea \n                  name=\"textarea-input\" \n                  id=\"textarea-input\" \n                  rows=\"10\"\n                  value={this.state.event} />\n                    \n                 </div></div>\n\n                 \n            \n                  \n              </div>\n            </div>\n            <div className=\"row\">\n             <div className=\"col-md-2 m-auto\">\n             \n                    <CLink \n                        href={`/dashboard`}\n                        rel=\"noreferrer noopener\" \n                        className=\"card-header-action\"  >\n                        <CButton block className=\".btn-ghost-button\" size=\"sm\" color=\"info\">Close</CButton>\n                      </CLink>\n            \n                </div></div>\n                </div>\n    )\n  }\n}\n\nBookContent.propTypes = {\n  getBookContent: PropTypes.func.isRequired,\n  bookContent: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  bookContent: state.book.bookContent,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { getBookContent }\n)(BookContent);\n","import React from \"react\";\nimport * as htmlToImage from 'html-to-image';\nimport jsPDF from 'jspdf';\nimport { CButton, CRow, CCol } from '@coreui/react'\nconst ExportToDoc = (data) => {\n  const toggleFade = () => {\n    window.history.back();\n  };\n\n  const ExportToWord = () => {\n    var element = \"exportContent\";\n    var header =\n      \"<html lang='en'><head><meta charset='utf-8'><meta name='viewport' content='width=device-width, initial-scale=1, shrink-to-fit=no'><meta name='theme-color' content='#000000'><link rel='manifest' href='/manifest.json'><link rel='shortcut icon' href='/favicon.ico'><link rel='stylesheet' href='https://use.fontawesome.com/releases/v5.2.0/css/all.css' integrity='sha384-hWVjflwFxL6sNzntih27bfxkr27PmbbK/iSvJ+a4+0owXq79v+lsFkW54bOGbiDQ' crossorigin='anonymous'><script nomodule src='https://cdnjs.cloudflare.com/ajax/libs/babel-polyfill/6.26.0/polyfill.min.js' integrity='sha256-WRc/eG3R84AverJv0zmqxAmdwQxstUpqkiE+avJ3WSo=' crossorigin='anonymous'></script><title>કેયોના જ્ઞાનસાગર</title></head><body>\";\n\n    var footer = \"</body></html>\";\n\n    var html = header + document.getElementById(element).innerHTML + footer;\n\n    var blob = new Blob([\"\\ufeff\", html], {\n      type: \"application/msword\",\n    });\n\n    // Specify link url\n    var url =\n      \"data:application/vnd.ms-word;charset=utf-8,\" + encodeURIComponent(html);\n\n    // Specify file name\n    var filename = \"કેયોનાજ્ઞાનસાગર\";\n    filename = filename ? filename + \".doc\" : \"document.doc\";\n\n    // Create download link element\n    var downloadLink = document.createElement(\"a\");\n\n    document.body.appendChild(downloadLink);\n\n    if (navigator.msSaveOrOpenBlob) {\n      navigator.msSaveOrOpenBlob(blob, filename);\n    } else {\n      // Create a link to the file\n      downloadLink.href = url;\n\n      // Setting the file name\n      downloadLink.download = filename;\n\n      //triggering the function\n      downloadLink.click();\n    }\n\n    document.body.removeChild(downloadLink);\n    \n  };\n  \n  \n  const printPDF = () => {\n    htmlToImage.toPng(document.getElementById('exportContent'), { quality: 0.95 })\n        .then(function (dataUrl) {\n          var link = document.createElement('a');\n          link.download = 'my-image-name.jpeg';\n          const pdf = new jsPDF();\n          const imgProps= pdf.getImageProperties(dataUrl);\n          const pdfWidth = pdf.internal.pageSize.getWidth();\n          const pdfHeight = (imgProps.height * pdfWidth) / imgProps.width;\n          pdf.addImage(dataUrl, 'PNG', 0, 0,pdfWidth, pdfHeight);\n          pdf.save(\"download.pdf\"); \n        });\n  };\n    \n  \n  return (\n    <div id=\"exportContent\">\n      <table className=\"input-table\">\n        <tr>\n          <th>પુસ્તક</th>\n          <th>આવૃત્તિ</th>\n          <th>પાના નંબર</th>\n          <th>પ્રસંગની તારીખ</th>\n          <th>ગુજરાતી તારીખ</th>\n          <th>પ્રસંગના લેખક</th>\n        </tr>\n        <tr>\n          <td>{data.bookName}</td>\n          <td>{data.bookEdition}</td>\n          <td>{data.pageNumber}</td>\n          <td>{data.eventDate}</td>\n          <td>{data.eventDateGuj}</td>\n          <td>{data.author}</td>\n        </tr>\n      </table>\n      <hr/>\n      <table className=\"input-table\">\n        <tr>\n          <th>પાત્ર</th>\n          <th>ગામ</th>\n          <th>પાત્રની જન્મ તારીખ</th>\n          <th>ગુજરાતી જન્મ તારીખ</th>\n          <th>પાત્રની મૃત્યુ તારીખ</th>\n          <th>ગુજરાતી મૃત્યુ તારીખ</th>\n        </tr>\n        <tr>\n          <td>{data.actor}</td>\n          <td>{data.village}</td>\n          <td>{data.birthDate}</td>\n          <td>{data.birthDateGuj}</td>\n          <td>{data.deathDateGuj}</td>\n          <td>{data.deathDateGuj}</td>\n        </tr>\n      </table>\n      <hr/>\n      <table className=\"table\">\n      <tr class=\"table-row\">\n      <td class=\"table-cell\"><b>મુખ્ય વિષય: </b></td><td class=\"table-cell\">{data.subject}</td>\n      </tr>\n      <tr class=\"table-row\">\n      <td class=\"table-cell\"><b>પેટા વિષય: </b></td><td class=\"table-cell\">{data.subSubject}</td>\n      </tr>\n      <tr class=\"table-row\">\n      <td class=\"table-cell\"><b>સંદર્ભ: </b></td><td class=\"table-cell\">{data.reference}</td>\n      </tr>\n      <tr class=\"table-row\">\n      <td class=\"table-cell\"><b>વિશેષ નોંધ: </b></td><td class=\"table-cell\">{data.comments}</td>\n      </tr>\n      <tr class=\"table-row\">\n      <td class=\"table-cell\"><b>શ્લોક/સાખી: </b></td><td class=\"table-cell\">{data.shlok}</td>\n      </tr>\n      </table>\n \n      \n      <h4>\n        <center><label>પ્રસંગ</label></center>\n      </h4>\n     \n      <p>{data.event}</p>\n      <hr/>\n      <center>\n      <CRow>\n      <CCol md=\"4\"></CCol>\n\n        <CCol md=\"1\">\n          <CButton onClick={ExportToWord} color=\"info\">Word</CButton>\n        </CCol>\n        <CCol md=\"1\">\n        <CButton onClick={printPDF} color=\"warning\">PDF</CButton>\n        </CCol>\n        <CCol md=\"2\">\n          <CButton color=\"primary\" onClick={toggleFade}>પાછળ  જવા</CButton>\n        </CCol>\n        <CCol md=\"3\"></CCol>\n\n      </CRow>\n      </center>\n    </div>\n  );\n};\n\nexport default ExportToDoc;\n\n","import React, { Component } from \"react\";\nimport { getBook } from \"../../actions/bookActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nimport ExportToDoc from \"../ExportToDoc\";\n\nclass ViewBook extends Component {\n  //set state\n  constructor() {\n    super();\n\n    this.state = {\n      bookName: \"\",\n      bookEdition: \"\",\n      pageNumber: \"\",\n      subject: \"\",\n      subSubject: \"\",\n      shlok: \"\",\n      event: \"\",\n      reference: \"\",\n      actor: \"\",\n      author: \"\",\n      village: \"\",\n      eventDate: \"\",\n      birthDate: \"\",\n      deathDate: \"\",\n      eventDateGuj: \"\",\n      birthDateGuj: \"\",\n      deathDateGuj: \"\",\n      comments: \"\",\n      errors: {}\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n    const {\n      id,\n      bookName,\n      bookEdition,\n      pageNumber,\n      subject,\n      subSubject,\n      shlok,\n      event,\n      reference,\n      actor,\n      author,\n      village,\n      eventDate,\n      birthDate,\n      deathDate,\n      eventDateGuj,\n      birthDateGuj,\n      deathDateGuj,\n      comments\n    } = nextProps.book;\n\n    this.setState({\n      id,\n      bookName,\n      bookEdition,\n      pageNumber,\n      subject,\n      subSubject,\n      shlok,\n      event,\n      reference,\n      actor,\n      author,\n      village,\n      eventDate,\n      birthDate,\n      deathDate,\n      eventDateGuj,\n      birthDateGuj,\n      deathDateGuj,\n      comments\n    });\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.props.getBook(id, this.props.history);\n  }\n \n  render() {\n   \n      return (\n        <ExportToDoc bookName={this.state.bookName} author={this.state.author} \n        bookEdition={this.state.bookEdition}  pageNumber={this.state.pageNumber} \n        subject={this.state.subject} subSubject={this.state.subSubject}\n        shlok={this.state.shlok} event={this.state.event} \n        comments={this.state.comments} reference={this.state.reference} \n        actor={this.state.actor} village={this.state.village}\n        eventDate={this.state.eventDate} eventDateGuj={this.state.eventDateGuj} \n        birthDate={this.state.birthDate} birthDateGuj={this.state.birthDateGuj} \n        deathDate={this.state.deathDate} deathDateGuj={this.state.deathDateGuj} />\n\n    );\n  }\n}\n\n\nViewBook.propTypes = {\n  getBook: PropTypes.func.isRequired,\n  book: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  book: state.book.book,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { getBook }\n)(ViewBook);\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Dashboard from \"./components/Dashboard\";\nimport Header from \"./components/Layout/Header\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport AddProject from \"./components/Project/AddProject\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport UpdateProject from \"./components/Project/UpdateProject\";\nimport ProjectBoard from \"./components/ProjectBoard/ProjectBoard\";\nimport AddProjectTask from \"./components/ProjectBoard/ProjectTasks/AddProjectTask\";\nimport UpdateProjectTask from \"./components/ProjectBoard/ProjectTasks/UpdateProjectTask\";\nimport Landing from \"./components/Layout/Landing\";\nimport Register from \"./components/UserManagement/Register\";\nimport Login from \"./components/UserManagement/Login\";\nimport jwt_decode from \"jwt-decode\";\nimport setJWTToken from \"./securityUtils/setJWTToken\";\nimport { SET_CURRENT_USER } from \"./actions/types\";\nimport { logout } from \"./actions/securityActions\";\nimport SecuredRoute from \"./securityUtils/SecureRoute\";\nimport Library from \"./components/Library\";\nimport AddBook from \"./components/Book/AddBook\";\nimport UpdateBook from \"./components/Book/UpdateBook\";\nimport ViewBook from \"./components/Book/ViewBook\";\nimport BookContent from \"./components/Book/BookContent\";\nimport ExportBook from \"./components/Book/ExportBook\";\n\n\nconst jwtToken = localStorage.jwtToken;\n\nif (jwtToken) {\n  setJWTToken(jwtToken);\n  const decoded_jwtToken = jwt_decode(jwtToken);\n  store.dispatch({\n    type: SET_CURRENT_USER,\n    payload: decoded_jwtToken\n  });\n\n  const currentTime = Date.now() / 1000;\n  if (decoded_jwtToken.exp < currentTime) {\n    store.dispatch(logout());\n    window.location.href = \"/\";\n  }\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Header />\n            {\n              //Public Routes\n            }\n\n            <Route exact path=\"/\" component={Landing} />\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/login\" component={Login} />\n\n            {\n              //Private Routes\n            }\n            <Switch>\n              <SecuredRoute exact path=\"/dashboard\" component={Dashboard} />\n              <SecuredRoute exact path=\"/library\" component={Library} />\n              <SecuredRoute exact path=\"/addBook\" component={AddBook} />\n              <SecuredRoute exact path=\"/addProject\" component={AddProject} />\n              <SecuredRoute\n                exact\n                path=\"/updateBook/:id\"\n                component={UpdateBook}\n              />\n               <SecuredRoute\n                exact\n                path=\"/updateProject/:id\"\n                component={UpdateProject}\n              />\n              <SecuredRoute\n                exact\n                path=\"/projectBoard/:id\"\n                component={ProjectBoard}\n              />\n              <SecuredRoute\n                exact\n                path=\"/addProjectTask/:id\"\n                component={AddProjectTask}\n              />\n              <SecuredRoute\n                exact\n                path=\"/updateProjectTask/:backlog_id/:pt_id\"\n                component={UpdateProjectTask}\n              />\n              <SecuredRoute exact path=\"/bookContent/:id\" component={BookContent} />\n              <SecuredRoute exact path=\"/viewBook/:id\" component={ViewBook} />\n              <SecuredRoute exact path=\"/exportBook/:id\" component={ExportBook} />\n\n            </Switch>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}