{"version":3,"sources":["actions/types.js","actions/bookActions.js","components/Book/BookItem.js","components/Book/CreateBookButton.js","components/Dashboard.js","securityUtils/setJWTToken.js","actions/securityActions.js","components/Layout/Header.js","actions/projectActions.js","components/Project/AddProject.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/backlogReducer.js","reducers/bookReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","components/Project/UpdateProject.js","components/ProjectBoard/ProjectTasks/ProjectTask.js","actions/backlogActions.js","components/ProjectBoard/Backlog.js","components/ProjectBoard/ProjectBoard.js","components/ProjectBoard/ProjectTasks/AddProjectTask.js","components/ProjectBoard/ProjectTasks/UpdateProjectTask.js","components/Layout/Landing.js","components/UserManagement/Register.js","components/UserManagement/Login.js","securityUtils/SecureRoute.js","components/Library.js","components/Book/AddBook.js","components/Book/UpdateBook.js","components/Collapses.js","components/Book/ViewBook.js","components/Book/BookContent.js","App.js","registerServiceWorker.js","index.js"],"names":["GET_ERRORS","createBook","book","button","history","dispatch","a","push","console","log","JSON","stringify","axios","post","type","payload","response","data","getBook","id","get","res","deleteBook","window","confirm","delete","BookItem","onDeleteClick","props","this","className","bookName","subject","href","to","onClick","bind","Component","CreateBookButton","connect","Fragment","name","Dashboard","getMyBooks","books","items","fields","striped","itemsPerPage","pagination","scopedSlots","item","rel","block","size","color","state","setJWTToken","token","defaults","headers","common","logout","localStorage","removeItem","Header","location","headerLinks","security","validToken","user","userIsAuthenticated","fullName","userIsNotAuthenticated","data-toggle","data-target","createProject","project","AddProject","projectName","projectIdentifier","description","start_date","end_date","errors","onChange","onSubmit","nextProps","setState","e","target","value","preventDefault","newProject","classnames","placeholder","initialState","projects","project_tasks","project_task","bookContent","booleanActionPayload","combineReducers","action","filter","backlog","projectSequence","initalState","middleware","thunk","ReactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","UpdateProject","match","params","getProject","updateProject","disabled","ProjectTask","backlog_id","pt_id","deleteProjectTask","priorityString","priorityClass","priority","summary","acceptanceCriteria","Backlog","tasks","project_tasks_prop","map","key","todoItems","inProgressItems","doneItems","i","length","status","ProjectBoard","getBacklog","BoardContent","projectNotFound","role","boardAlgorithm","AddProjectTask","dueDate","newTask","addProjectTask","UpdateProjectTask","create_At","getProjectTask","updateProjectTask","patch","Landing","Register","username","password","confirmPassword","newUser","createNewUser","Login","LoginRequest","login","setItem","decoded","jwt_decode","component","otherProps","render","Library","getBooks","columnFilter","tableFilter","footer","itemsPerPageSelect","hover","sorter","AddBook","bookEdition","pageNumber","subSubject","shlok","event","reference","actor","author","village","eventDate","birthDate","deathDate","eventDateGuj","birthDateGuj","deathDateGuj","comments","newBook","rows","UpdateBook","updateBook","toggleFade","back","Collapses","useState","show","ViewBook","BookContent","getBookContent","jwtToken","decoded_jwtToken","currentTime","Date","now","exp","App","exact","path","isLocalhost","Boolean","hostname","registerValidSW","swUrl","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","document","getElementById","URL","process","origin","addEventListener","fetch","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.66e56500.chunk.js","sourcesContent":["export const GET_ERRORS = \"GET_ERRORS\";\nexport const GET_PROJECTS = \"GET_PROJECTS\";\nexport const GET_PROJECT = \"GET_PROJECT\";\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\n\n//Types for BACKLOG ACTIONS\n\nexport const GET_BACKLOG = \"GET_BACKLOG\";\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";\n\n//Types for BOOK ACTIONS\n\nexport const GET_BOOKS = \"GET_BOOKS\";\nexport const GET_BOOK = \"GET_BOOK\";\nexport const DELETE_BOOK = \"DELETE_BOOK\";\nexport const GET_BOOK_CONTENT = \"GET_BOOK_CONTENT\";\n\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\n","import axios from \"axios\";\nimport { GET_ERRORS, GET_BOOKS, GET_BOOK, GET_BOOK_CONTENT, DELETE_BOOK } from \"./types\";\n\nexport const createBook = (book, button, history) => async dispatch => {\n  try {\n    if(button === 'back'){\n      history.push(\"/library\");\n      console.log(\"API not Called: \"+button);\n    }else{\n      console.log(\"API Called: \"+JSON.stringify(book));\n      const res = await axios.post(\"/api/book\", book);\n      if(button === 'close'){\n        history.push(\"/library\");\n      }\n      dispatch({\n        type: GET_ERRORS,\n        payload: {}\n      });\n    }\n\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const getBooks = () => async dispatch => {\n  const res = await axios.get(\"/api/book/all\");\n  dispatch({\n    type: GET_BOOKS,\n    payload: res.data\n  });\n};\nexport const getMyBooks = () => async dispatch => {\n  const res = await axios.get(\"/api/book/allMyBooks\");\n  dispatch({\n    type: GET_BOOKS,\n    payload: res.data\n  });\n};\n\nexport const getBook = (id, history) => async dispatch => {\n  try {\n    const res = await axios.get(`/api/book/${id}`);\n    dispatch({\n      type: GET_BOOK,\n      payload: res.data\n    });\n  } catch (error) {\n    history.push(\"/library\");\n  }\n};\n\nexport const getBookContent = (id, history) => async dispatch => {\n  try {\n    console.log(\"API Called: \");\n    const res = await axios.get(`/api/book/content/${id}`);\n    dispatch({\n      type: GET_BOOK_CONTENT,\n      payload: res.data\n    });\n  } catch (error) {\n    history.push(\"/library\");\n  }\n};\n\nexport const deleteBook = id => async dispatch => {\n  if (\n    window.confirm(\n      \"Are you sure? This will delete the book and all the data related to it\"\n    )\n  ) {\n    await axios.delete(`/api/book/${id}`);\n    dispatch({\n      type: DELETE_BOOK,\n      payload: id\n    });\n  }\n};\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { deleteBook } from \"../../actions/bookActions\";\n\nclass BookItem extends Component {\n  onDeleteClick = id => {\n    this.props.deleteBook(id);\n  };\n\n  render() {\n    const { book } = this.props;\n    return (\n      <div className=\"container\">\n        <div className=\"card card-body bg-light mb-3\">\n          <div className=\"row\">\n            <div className=\"col-2\">\n              <span className=\"mx-auto\">{book.id}</span>\n            </div>\n            <div className=\"col-lg-6 col-md-4 col-8\">\n              <h3>{book.bookName}</h3>\n              <p>{book.subject}</p>\n            </div>\n            <div className=\"col-md-4 d-none d-lg-block\">\n              <ul className=\"list-group\">\n                <a href=\"#\">\n                  <li className=\"list-group-item board\">\n                    <i className=\"fa fa-flag-checkered pr-1\"> Book Board </i>\n                  </li>\n                </a>\n                <Link to={`/updateBook/${book.id}`}>\n                  <li className=\"list-group-item update\">\n                    <i className=\"fa fa-edit pr-1\"> Update Book Info</i>\n                  </li>\n                </Link>\n\n                <li\n                  className=\"list-group-item delete\"\n                  onClick={this.onDeleteClick.bind(\n                    this,\n                    book.id\n                  )}\n                >\n                  <i className=\"fa fa-minus-circle pr-1\"> Delete Book</i>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nBookItem.propTypes = {\n  deleteBook: PropTypes.func.isRequired\n};\n\nexport default connect(\n  null,\n  { deleteBook }\n)(BookItem);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst CreateBookButton = (data) => {\n  return (\n    <React.Fragment>\n      <Link to=\"/addBook\" className=\"btn btn-lg btn-info\">\n      {data.name}\n      </Link>\n    </React.Fragment>\n  );\n};\n\nexport default CreateBookButton;\n","import React, { Component, useState } from \"react\";\nimport BookItem from \"./Book/BookItem\";\nimport CreateBookButton from \"./Book/CreateBookButton\";\nimport { connect } from \"react-redux\";\nimport { getMyBooks, deleteBook } from \"../actions/bookActions\";\nimport PropTypes from \"prop-types\";\n\nimport {\n  CLink,\n  CButton,\n  CBadge,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CDataTable,\n  CRow,\n  CModal,\n  CModalBody,\n  CModalFooter,\n  CModalHeader,\n  CModalTitle \n  } from '@coreui/react'\nclass Dashboard extends Component {\n  componentDidMount() {\n    this.props.getMyBooks();\n  }\n  onDeleteClick = id => {\n    this.props.deleteBook(id);\n  };\n  render() {\n    const { books } = this.props.book;\n\n    return (\n      <div className=\"books\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <h3 className=\"display-6 text-center\">પુસ્તકો</h3>\n              <br />\n              <CreateBookButton name=\"નવું પુસ્તક +\"/>\n              <hr />\n     \n      <CRow>\n      <CCol>\n          <CCard>\n            <CCardHeader>\n            તમારા દ્વારા એન્ટ્રી કે સુધારેલા પુસ્તકો અને પ્રસંગોનું લીસ્ટ\n            </CCardHeader>\n            <CCardBody>\n            <CDataTable\n              items={books}\n              fields={fields}\n              striped\n              itemsPerPage={5}\n              pagination\n              scopedSlots = {{\n                'id':\n                  (item)=>(\n                    <td>\n                      <CLink \n                        href={`/viewBook/${item.id}`}\n                        rel=\"noreferrer noopener\" \n                        className=\"card-header-action\"  >\n                        <CButton block className=\".btn-ghost-button\" size=\"sm\" color=\"success\">View</CButton>\n                        </CLink>\n                      <CLink \n                        href={`/updateBook/${item.id}`}\n                        rel=\"noreferrer noopener\" \n                        className=\"card-header-action\"  >\n                        <CButton block  className=\".btn-ghost-button\" size=\"sm\" color=\"warning\">Edit</CButton>\n\n                      </CLink>\n                      <CLink \n                      onClick={this.onDeleteClick.bind(\n                        this,\n                        item.id\n                      )}\n                        rel=\"noreferrer noopener\" \n                        className=\"card-header-action\"  >\n                        <CButton block className=\".btn-ghost-button\" size=\"sm\" color=\"danger\">Delete</CButton>\n                      </CLink>\n         \n            \n                    </td>\n                    \n                  )\n\n              }}\n            />\n            </CCardBody>\n          </CCard>\n        </CCol>\n        </CRow>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst fields = ['bookName', 'bookEdition', 'pageNumber', 'subject', 'subSubject', 'reference', 'actor', 'village', 'id'];\n\nDashboard.propTypes = {\n  book: PropTypes.object.isRequired,\n  getMyBooks: PropTypes.func.isRequired,\n  deleteBook: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  book: state.book\n});\n\nexport default connect(\n  mapStateToProps,\n  { getMyBooks, deleteBook }\n)(Dashboard);","import axios from \"axios\";\n\nconst setJWTToken = token => {\n  if (token) {\n    axios.defaults.headers.common[\"Authorization\"] = token;\n  } else {\n    delete axios.defaults.headers.common[\"Authorization\"];\n  }\n};\n\nexport default setJWTToken;\n","import axios from \"axios\";\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\nimport setJWTToken from \"../securityUtils/setJWTToken\";\nimport jwt_decode from \"jwt-decode\";\n\nexport const createNewUser = (newUser, history) => async dispatch => {\n  try {\n    await axios.post(\"/api/users/register\", newUser);\n    history.push(\"/login\");\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const login = LoginRequest => async dispatch => {\n  try {\n    // post => Login Request\n    const res = await axios.post(\"/api/users/login\", LoginRequest);\n    // extract token from res.data\n    const { token } = res.data;\n    // store the token in the localStorage\n    localStorage.setItem(\"jwtToken\", token);\n    // set our token in header ***\n    setJWTToken(token);\n    // decode token on React\n    const decoded = jwt_decode(token);\n    // dispatch to our securityReducer\n    dispatch({\n      type: SET_CURRENT_USER,\n      payload: decoded\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const logout = () => dispatch => {\n  localStorage.removeItem(\"jwtToken\");\n  setJWTToken(false);\n  dispatch({\n    type: SET_CURRENT_USER,\n    payload: {}\n  });\n};\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logout } from \"../../actions/securityActions\";\n\nclass Header extends Component {\n  logout() {\n    this.props.logout();\n    window.location.href = \"/\";\n  }\n  render() {\n    const { validToken, user } = this.props.security;\n\n    const userIsAuthenticated = (\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n        <ul className=\"navbar-nav mr-auto\">\n              <li className=\"nav-item\">\n                <a className=\"nav-link\" href=\"/library\">\n                લાયબ્રેરી\n                </a>\n              </li>\n        </ul>\n        <ul className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/dashboard\">\n            મારુ ડેશબોર્ડ\n            </Link>\n          </li>\n        </ul>\n\n        <ul className=\"navbar-nav ml-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/dashboard\">\n              <i className=\"fas fa-user-circle mr-1\" />\n              {user.fullName}\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link\n              className=\"nav-link\"\n              to=\"/logout\"\n              onClick={this.logout.bind(this)}>\n            લોગ આઉટ\n            </Link>\n          </li>\n        </ul>\n      </div>\n    );\n\n    const userIsNotAuthenticated = (\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n        <ul className=\"navbar-nav ml-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/register\">\n            રેજિસ્ટર\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/login\">\n            લોગીન\n            </Link>\n          </li>\n        </ul>\n      </div>\n    );\n\n    let headerLinks;\n\n    if (validToken && user) {\n      headerLinks = userIsAuthenticated;\n    } else {\n      headerLinks = userIsNotAuthenticated;\n    }\n\n    return (\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\n        <div className=\"container\">\n          <Link className=\"navbar-brand\" to=\"/\">\n          કેયોના જ્ઞાનસાગર - સત્સંગ ના પ્રસંગો\n          </Link>\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#mobile-nav\"\n          >\n            <span className=\"navbar-toggler-icon\" />\n          </button>\n          {headerLinks}\n        </div>\n      </nav>\n    );\n  }\n}\n\nHeader.propTypes = {\n  logout: PropTypes.func.isRequired,\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  security: state.security\n});\n\nexport default connect(\n  mapStateToProps,\n  { logout }\n)(Header);\n","import axios from \"axios\";\nimport { GET_ERRORS, GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"./types\";\n\nexport const createProject = (project, history) => async dispatch => {\n  try {\n    await axios.post(\"/api/project\", project);\n    history.push(\"/dashboard\");\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const getProjects = () => async dispatch => {\n  const res = await axios.get(\"/api/project/all\");\n  dispatch({\n    type: GET_PROJECTS,\n    payload: res.data\n  });\n};\n\nexport const getProject = (id, history) => async dispatch => {\n  try {\n    const res = await axios.get(`/api/project/${id}`);\n    dispatch({\n      type: GET_PROJECT,\n      payload: res.data\n    });\n  } catch (error) {\n    history.push(\"/dashboard\");\n  }\n};\n\nexport const deleteProject = id => async dispatch => {\n  if (\n    window.confirm(\n      \"Are you sure? This will delete the project and all the data related to it\"\n    )\n  ) {\n    await axios.delete(`/api/project/${id}`);\n    dispatch({\n      type: DELETE_PROJECT,\n      payload: id\n    });\n  }\n};\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { createProject } from \"../../actions/projectActions\";\nimport classnames from \"classnames\";\n\nclass AddProject extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      projectName: \"\",\n      projectIdentifier: \"\",\n      description: \"\",\n      start_date: \"\",\n      end_date: \"\",\n      errors: {}\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  //life cycle hooks\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const newProject = {\n      projectName: this.state.projectName,\n      projectIdentifier: this.state.projectIdentifier,\n      description: this.state.description,\n      start_date: this.state.start_date,\n      end_date: this.state.end_date\n    };\n    this.props.createProject(newProject, this.props.history);\n  }\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div>\n        <div className=\"project\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-8 m-auto\">\n                <h5 className=\"display-4 text-center\">Create Project form</h5>\n                <hr />\n                <form onSubmit={this.onSubmit}>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      className={classnames(\"form-control form-control-lg\", {\n                        \"is-invalid\": errors.projectName\n                      })}\n                      placeholder=\"Project Name\"\n                      name=\"projectName\"\n                      value={this.state.projectName}\n                      onChange={this.onChange}\n                    />\n                    {errors.projectName && (\n                      <div className=\"invalid-feedback\">\n                        {errors.projectName}\n                      </div>\n                    )}\n                  </div>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      className={classnames(\"form-control form-control-lg\", {\n                        \"is-invalid\": errors.projectIdentifier\n                      })}\n                      placeholder=\"Unique Project ID\"\n                      name=\"projectIdentifier\"\n                      value={this.state.projectIdentifier}\n                      onChange={this.onChange}\n                    />\n                    {errors.projectIdentifier && (\n                      <div className=\"invalid-feedback\">\n                        {errors.projectIdentifier}\n                      </div>\n                    )}\n                  </div>\n                  <div className=\"form-group\">\n                    <textarea\n                      className={classnames(\"form-control form-control-lg\", {\n                        \"is-invalid\": errors.description\n                      })}\n                      placeholder=\"Project Description\"\n                      name=\"description\"\n                      value={this.state.description}\n                      onChange={this.onChange}\n                    />\n                    {errors.description && (\n                      <div className=\"invalid-feedback\">\n                        {errors.description}\n                      </div>\n                    )}\n                  </div>\n                  <h6>Start Date</h6>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"date\"\n                      className=\"form-control form-control-lg\"\n                      name=\"start_date\"\n                      value={this.state.start_date}\n                      onChange={this.onChange}\n                    />\n                  </div>\n                  <h6>Estimated End Date</h6>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"date\"\n                      className=\"form-control form-control-lg\"\n                      name=\"end_date\"\n                      value={this.state.end_date}\n                      onChange={this.onChange}\n                    />\n                  </div>\n\n                  <input\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block mt-4\"\n                  />\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nAddProject.propTypes = {\n  createProject: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { createProject }\n)(AddProject);\n","import { GET_ERRORS } from \"../actions/types\";\n\nconst initialState = {};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return action.payload;\n\n    default:\n      return state;\n  }\n}\n","import { GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"../actions/types\";\n\nconst initialState = {\n  projects: [],\n  project: {}\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_PROJECTS:\n      return {\n        ...state,\n        projects: action.payload\n      };\n\n    case GET_PROJECT:\n      return {\n        ...state,\n        project: action.payload\n      };\n\n    case DELETE_PROJECT:\n      return {\n        ...state,\n        projects: state.projects.filter(\n          project => project.projectIdentifier !== action.payload\n        )\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  GET_BACKLOG,\n  GET_PROJECT_TASK,\n  DELETE_PROJECT_TASK\n} from \"../actions/types\";\n\nconst initialState = {\n  project_tasks: [],\n  project_task: {}\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_BACKLOG:\n      return {\n        ...state,\n        project_tasks: action.payload\n      };\n\n    case GET_PROJECT_TASK:\n      return {\n        ...state,\n        project_task: action.payload\n      };\n\n    case DELETE_PROJECT_TASK:\n      return {\n        ...state,\n        project_tasks: state.project_tasks.filter(\n          project_task => project_task.projectSequence !== action.payload\n        )\n      };\n\n    default:\n      return state;\n  }\n}\n","import { GET_BOOKS, GET_BOOK, GET_BOOK_CONTENT, DELETE_BOOK } from \"../actions/types\";\n\nconst initialState = {\n  books: [],\n  book: {},\n  bookContent: {}\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_BOOKS:\n      return {\n        ...state,\n        books: action.payload\n      };\n\n    case GET_BOOK:\n      return {\n        ...state,\n        book: action.payload\n      };\n      case GET_BOOK_CONTENT:\n      return {\n        ...state,\n        bookContent: action.payload\n      };\n    case DELETE_BOOK:\n      return {\n        ...state,\n        books: state.books.filter(\n          book => book.id !== action.payload\n        )\n      };\n    default:\n      return state;\n  }\n}\n","import { SET_CURRENT_USER } from \"../actions/types\";\n\nconst initialState = {\n  validToken: false,\n  user: {}\n};\n\nconst booleanActionPayload = payload => {\n  if (payload) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return {\n        ...state,\n        validToken: booleanActionPayload(action.payload),\n        user: action.payload\n      };\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport errorReducer from \"./errorReducer\";\nimport projectReducer from \"./projectReducer\";\nimport backlogReducer from \"./backlogReducer\";\nimport bookReducer from \"./bookReducer\";\nimport securityReducer from \"./securityReducer\";\n\nexport default combineReducers({\n  errors: errorReducer,\n  project: projectReducer,\n  backlog: backlogReducer,\n  book: bookReducer,\n  security: securityReducer\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initalState = {};\nconst middleware = [thunk];\n\nlet store;\n\nconst ReactReduxDevTools =\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\n\nif (window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools) {\n  store = createStore(\n    rootReducer,\n    initalState,\n    compose(\n      applyMiddleware(...middleware),\n      ReactReduxDevTools\n    )\n  );\n} else {\n  store = createStore(\n    rootReducer,\n    initalState,\n    compose(applyMiddleware(...middleware))\n  );\n}\n\nexport default store;\n","import React, { Component } from \"react\";\nimport { getProject, createProject } from \"../../actions/projectActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\n\nclass UpdateProject extends Component {\n  //set state\n  constructor() {\n    super();\n\n    this.state = {\n      id: \"\",\n      projectName: \"\",\n      projectIdentifier: \"\",\n      description: \"\",\n      start_date: \"\",\n      end_date: \"\",\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n    const {\n      id,\n      projectName,\n      projectIdentifier,\n      description,\n      start_date,\n      end_date\n    } = nextProps.project;\n\n    this.setState({\n      id,\n      projectName,\n      projectIdentifier,\n      description,\n      start_date,\n      end_date\n    });\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.props.getProject(id, this.props.history);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const updateProject = {\n      id: this.state.id,\n      projectName: this.state.projectName,\n      projectIdentifier: this.state.projectIdentifier,\n      description: this.state.description,\n      start_date: this.state.start_date,\n      end_date: this.state.end_date\n    };\n\n    this.props.createProject(updateProject, this.props.history);\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"project\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h5 className=\"display-4 text-center\">Update Project form</h5>\n              <hr />\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.projectName\n                    })}\n                    placeholder=\"Project Name\"\n                    name=\"projectName\"\n                    value={this.state.projectName}\n                    onChange={this.onChange}\n                  />\n                  {errors.projectName && (\n                    <div className=\"invalid-feedback\">{errors.projectName}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Unique Project ID\"\n                    name=\"projectIdentifier\"\n                    value={this.state.projectIdentifier}\n                    onChange={this.onChange}\n                    disabled\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.description\n                    })}\n                    placeholder=\"Project Description\"\n                    name=\"description\"\n                    onChange={this.onChange}\n                    value={this.state.description}\n                  />\n                  {errors.description && (\n                    <div className=\"invalid-feedback\">{errors.description}</div>\n                  )}\n                </div>\n                <h6>Start Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"start_date\"\n                    value={this.state.start_date}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <h6>Estimated End Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"end_date\"\n                    value={this.state.end_date}\n                    onChange={this.onChange}\n                  />\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nUpdateProject.propTypes = {\n  getProject: PropTypes.func.isRequired,\n  createProject: PropTypes.func.isRequired,\n  project: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  project: state.project.project,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { getProject, createProject }\n)(UpdateProject);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { deleteProjectTask } from \"../../../actions/backlogActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nclass ProjectTask extends Component {\n  onDeleteClick(backlog_id, pt_id) {\n    this.props.deleteProjectTask(backlog_id, pt_id);\n  }\n  render() {\n    const { project_task } = this.props;\n    let priorityString;\n    let priorityClass;\n\n    if (project_task.priority === 1) {\n      priorityClass = \"bg-danger text-light\";\n      priorityString = \"HIGH\";\n    }\n\n    if (project_task.priority === 2) {\n      priorityClass = \"bg-warning text-light\";\n      priorityString = \"MEDIUM\";\n    }\n\n    if (project_task.priority === 3) {\n      priorityClass = \"bg-info text-light\";\n      priorityString = \"LOW\";\n    }\n\n    return (\n      <div className=\"card mb-1 bg-light\">\n        <div className={`card-header text-primary ${priorityClass}`}>\n          ID: {project_task.projectSequence} -- Priority: {priorityString}\n        </div>\n        <div className=\"card-body bg-light\">\n          <h5 className=\"card-title\">{project_task.summary}</h5>\n          <p className=\"card-text text-truncate \">\n            {project_task.acceptanceCriteria}\n          </p>\n          <Link\n            to={`/updateProjectTask/${project_task.projectIdentifier}/${\n              project_task.projectSequence\n            }`}\n            className=\"btn btn-primary\"\n          >\n            View / Update\n          </Link>\n\n          <button\n            className=\"btn btn-danger ml-4\"\n            onClick={this.onDeleteClick.bind(\n              this,\n              project_task.projectIdentifier,\n              project_task.projectSequence\n            )}\n          >\n            Delete\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nProjectTask.propTypes = {\n  deleteProjectTask: PropTypes.func.isRequired\n};\nexport default connect(\n  null,\n  { deleteProjectTask }\n)(ProjectTask);\n","import axios from \"axios\";\nimport {\n  GET_ERRORS,\n  GET_BACKLOG,\n  GET_PROJECT_TASK,\n  DELETE_PROJECT_TASK\n} from \"./types\";\n\n//Fix bug with priority in Spring Boot Server, needs to check null first\nexport const addProjectTask = (\n  backlog_id,\n  project_task,\n  history\n) => async dispatch => {\n  try {\n    await axios.post(`/api/backlog/${backlog_id}`, project_task);\n    history.push(`/projectBoard/${backlog_id}`);\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const getBacklog = backlog_id => async dispatch => {\n  try {\n    const res = await axios.get(`/api/backlog/${backlog_id}`);\n    dispatch({\n      type: GET_BACKLOG,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const getProjectTask = (\n  backlog_id,\n  pt_id,\n  history\n) => async dispatch => {\n  try {\n    const res = await axios.get(`/api/backlog/${backlog_id}/${pt_id}`);\n    dispatch({\n      type: GET_PROJECT_TASK,\n      payload: res.data\n    });\n  } catch (err) {\n    history.push(\"/dashboard\");\n  }\n};\n\nexport const updateProjectTask = (\n  backlog_id,\n  pt_id,\n  project_task,\n  history\n) => async dispatch => {\n  try {\n    await axios.patch(`/api/backlog/${backlog_id}/${pt_id}`, project_task);\n    history.push(`/projectBoard/${backlog_id}`);\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const deleteProjectTask = (backlog_id, pt_id) => async dispatch => {\n  if (\n    window.confirm(\n      `You are deleting project task ${pt_id}, this action cannot be undone`\n    )\n  ) {\n    await axios.delete(`/api/backlog/${backlog_id}/${pt_id}`);\n    dispatch({\n      type: DELETE_PROJECT_TASK,\n      payload: pt_id\n    });\n  }\n};\n","import React, { Component } from \"react\";\nimport ProjectTask from \"./ProjectTasks/ProjectTask\";\n\nclass Backlog extends Component {\n  render() {\n    const { project_tasks_prop } = this.props;\n\n    const tasks = project_tasks_prop.map(project_task => (\n      <ProjectTask key={project_task.id} project_task={project_task} />\n    ));\n\n    let todoItems = [];\n    let inProgressItems = [];\n    let doneItems = [];\n\n    for (let i = 0; i < tasks.length; i++) {\n      if (tasks[i].props.project_task.status === \"TO_DO\") {\n        todoItems.push(tasks[i]);\n      }\n\n      if (tasks[i].props.project_task.status === \"IN_PROGRESS\") {\n        inProgressItems.push(tasks[i]);\n      }\n\n      if (tasks[i].props.project_task.status === \"DONE\") {\n        doneItems.push(tasks[i]);\n      }\n    }\n\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-secondary text-white\">\n                <h3>TO DO</h3>\n              </div>\n            </div>\n            {todoItems}\n            {\n              // insert tasks here\n            }\n          </div>\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-primary text-white\">\n                <h3>In Progress</h3>\n              </div>\n            </div>\n            {inProgressItems}\n          </div>\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-success text-white\">\n                <h3>Done</h3>\n              </div>\n            </div>\n            {doneItems}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Backlog;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Backlog from \"./Backlog\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { getBacklog } from \"../../actions/backlogActions\";\n\nclass ProjectBoard extends Component {\n  //constructor to handle errors\n  constructor() {\n    super();\n    this.state = {\n      errors: {}\n    };\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.props.getBacklog(id);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  render() {\n    const { id } = this.props.match.params;\n    const { project_tasks } = this.props.backlog;\n    const { errors } = this.state;\n\n    let BoardContent;\n\n    const boardAlgorithm = (errors, project_tasks) => {\n      if (project_tasks.length < 1) {\n        //PROJECT IDENTIFIER BUG\n        if (errors.projectNotFound) {\n          return (\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\n              {errors.projectNotFound}\n            </div>\n          );\n        } else if (errors.projectIdentifier) {\n          return (\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\n              {errors.projectIdentifier}\n            </div>\n          );\n        } else {\n          return (\n            <div className=\"alert alert-info text-center\" role=\"alert\">\n              No Project Tasks on this board\n            </div>\n          );\n        }\n      } else {\n        return <Backlog project_tasks_prop={project_tasks} />;\n      }\n    };\n\n    BoardContent = boardAlgorithm(errors, project_tasks);\n\n    return (\n      <div className=\"container\">\n        <Link to={`/addProjectTask/${id}`} className=\"btn btn-primary mb-3\">\n          <i className=\"fas fa-plus-circle\"> Create Project Task</i>\n        </Link>\n        <br />\n        <hr />\n        {BoardContent}\n      </div>\n    );\n  }\n}\n\nProjectBoard.propTypes = {\n  backlog: PropTypes.object.isRequired,\n  getBacklog: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  backlog: state.backlog,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { getBacklog }\n)(ProjectBoard);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { addProjectTask } from \"../../../actions/backlogActions\";\nimport PropTypes from \"prop-types\";\n\nclass AddProjectTask extends Component {\n  constructor(props) {\n    super(props);\n    const { id } = this.props.match.params;\n\n    this.state = {\n      summary: \"\",\n      acceptanceCriteria: \"\",\n      status: \"\",\n      priority: 0,\n      dueDate: \"\",\n      projectIdentifier: id,\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  // on change\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n  //on submit\n  onSubmit(e) {\n    e.preventDefault();\n\n    const newTask = {\n      summary: this.state.summary,\n      acceptanceCriteria: this.state.acceptanceCriteria,\n      status: this.state.status,\n      priority: this.state.priority,\n      dueDate: this.state.dueDate\n    };\n\n    this.props.addProjectTask(\n      this.state.projectIdentifier,\n      newTask,\n      this.props.history\n    );\n  }\n\n  render() {\n    const { id } = this.props.match.params;\n    const { errors } = this.state;\n    return (\n      <div className=\"add-PBI\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <Link to={`/projectBoard/${id}`} className=\"btn btn-light\">\n                Back to Project Board\n              </Link>\n              <h4 className=\"display-4 text-center\">Add Project Task</h4>\n              <p className=\"lead text-center\">Project Name + Project Code</p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.summary\n                    })}\n                    name=\"summary\"\n                    placeholder=\"Project Task summary\"\n                    value={this.state.summary}\n                    onChange={this.onChange}\n                  />\n                  {errors.summary && (\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Acceptance Criteria\"\n                    name=\"acceptanceCriteria\"\n                    value={this.state.acceptanceCriteria}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <h6>Due Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"dueDate\"\n                    value={this.state.dueDate}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"priority\"\n                    value={this.state.priority}\n                    onChange={this.onChange}\n                  >\n                    <option value={0}>Select Priority</option>\n                    <option value={1}>High</option>\n                    <option value={2}>Medium</option>\n                    <option value={3}>Low</option>\n                  </select>\n                </div>\n\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"status\"\n                    value={this.state.status}\n                    onChange={this.onChange}\n                  >\n                    <option value=\"\">Select Status</option>\n                    <option value=\"TO_DO\">TO DO</option>\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                    <option value=\"DONE\">DONE</option>\n                  </select>\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nAddProjectTask.propTypes = {\n  addProjectTask: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { addProjectTask }\n)(AddProjectTask);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { Link } from \"react-router-dom\";\nimport {\n  getProjectTask,\n  updateProjectTask\n} from \"../../../actions/backlogActions\";\nimport PropTypes from \"prop-types\";\n\nclass UpdateProjectTask extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      id: \"\",\n      projectSequence: \"\",\n      summary: \"\",\n      acceptanceCriteria: \"\",\n      status: \"\",\n      priority: \"\",\n      dueDate: \"\",\n      projectIdentifier: \"\",\n      create_At: \"\",\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    const { backlog_id, pt_id } = this.props.match.params;\n    this.props.getProjectTask(backlog_id, pt_id, this.props.history);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n\n    const {\n      id,\n      projectSequence,\n      summary,\n      acceptanceCriteria,\n      status,\n      priority,\n      dueDate,\n      projectIdentifier,\n      create_At\n    } = nextProps.project_task;\n\n    this.setState({\n      id,\n      projectSequence,\n      summary,\n      acceptanceCriteria,\n      status,\n      priority,\n      dueDate,\n      projectIdentifier,\n      create_At\n    });\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const UpdateProjectTask = {\n      id: this.state.id,\n      projectSequence: this.state.projectSequence,\n      summary: this.state.summary,\n      acceptanceCriteria: this.state.acceptanceCriteria,\n      status: this.state.status,\n      priority: this.state.priority,\n      dueDate: this.state.dueDate,\n      projectIdentifier: this.state.projectIdentifier,\n      create_At: this.state.create_At\n    };\n\n    // console.log(UpdateProjectTask);\n    this.props.updateProjectTask(\n      this.state.projectIdentifier,\n      this.state.projectSequence,\n      UpdateProjectTask,\n      this.props.history\n    );\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"add-PBI\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <Link\n                to={`/projectBoard/${this.state.projectIdentifier}`}\n                className=\"btn btn-light\"\n              >\n                Back to Project Board\n              </Link>\n              <h4 className=\"display-4 text-center\">Update Project Task</h4>\n              <p className=\"lead text-center\">\n                Project Name: {this.state.projectIdentifier} | Project Task ID:{\" \"}\n                {this.state.projectSequence}{\" \"}\n              </p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.summary\n                    })}\n                    name=\"summary\"\n                    placeholder=\"Project Task summary\"\n                    value={this.state.summary}\n                    onChange={this.onChange}\n                  />\n                  {errors.summary && (\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Acceptance Criteria\"\n                    name=\"acceptanceCriteria\"\n                    value={this.state.acceptanceCriteria}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <h6>Due Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"dueDate\"\n                    value={this.state.dueDate}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"priority\"\n                    value={this.state.priority}\n                    onChange={this.onChange}\n                  >\n                    <option value={0}>Select Priority</option>\n                    <option value={1}>High</option>\n                    <option value={2}>Medium</option>\n                    <option value={3}>Low</option>\n                  </select>\n                </div>\n\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"status\"\n                    value={this.state.status}\n                    onChange={this.onChange}\n                  >\n                    <option value=\"\">Select Status</option>\n                    <option value=\"TO_DO\">TO DO</option>\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                    <option value=\"DONE\">DONE</option>\n                  </select>\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nUpdateProjectTask.propTypes = {\n  getProjectTask: PropTypes.func.isRequired,\n  project_task: PropTypes.object.isRequired,\n  updateProjectTask: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  project_task: state.backlog.project_task,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { getProjectTask, updateProjectTask }\n)(UpdateProjectTask);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nclass Landing extends Component {\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n  render() {\n    return (\n      <div className=\"landing\">\n        <div className=\"light-overlay landing-inner text-dark\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-12 text-center\">\n                <h1 className=\"display-3 mb-4\">\n                કેયોના જ્ઞાનસાગર\n                </h1>\n                <p className=\"lead\">\n                કેયોના જ્ઞાનસાગર માં સત્સંગ ના પ્રસંગો લખો કે વાંચો.\n                </p>\n                <hr />\n                <Link className=\"btn btn-lg btn-primary mr-2\" to=\"/register\">\n                રેજિસ્ટર\n                </Link>\n                <Link className=\"btn btn-lg btn-secondary mr-2\" to=\"/login\">\n                લોગીન\n                </Link>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLanding.propTypes = {\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  security: state.security\n});\n\nexport default connect(mapStateToProps)(Landing);\n","import React, { Component } from \"react\";\nimport { createNewUser } from \"../../actions/securityActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\n\nclass Register extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      username: \"\",\n      fullName: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const newUser = {\n      username: this.state.username,\n      fullName: this.state.fullName,\n      password: this.state.password,\n      confirmPassword: this.state.confirmPassword\n    };\n\n    this.props.createNewUser(newUser, this.props.history);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"register\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h1 className=\"display-4 text-center\">Sign Up</h1>\n              <p className=\"lead text-center\">Create your Account</p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.fullName\n                    })}\n                    placeholder=\"Full Name\"\n                    name=\"fullName\"\n                    value={this.state.fullName}\n                    onChange={this.onChange}\n                  />\n                  {errors.fullName && (\n                    <div className=\"invalid-feedback\">{errors.fullName}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.username\n                    })}\n                    placeholder=\"Email Address (Username)\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.onChange}\n                  />\n                  {errors.username && (\n                    <div className=\"invalid-feedback\">{errors.username}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.password\n                    })}\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChange}\n                  />\n                  {errors.password && (\n                    <div className=\"invalid-feedback\">{errors.password}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.confirmPassword\n                    })}\n                    placeholder=\"Confirm Password\"\n                    name=\"confirmPassword\"\n                    value={this.state.confirmPassword}\n                    onChange={this.onChange}\n                  />\n                  {errors.confirmPassword && (\n                    <div className=\"invalid-feedback\">\n                      {errors.confirmPassword}\n                    </div>\n                  )}\n                </div>\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nRegister.propTypes = {\n  createNewUser: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  errors: state.errors,\n  security: state.security\n});\nexport default connect(\n  mapStateToProps,\n  { createNewUser }\n)(Register);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { login } from \"../../actions/securityActions\";\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      username: \"\",\n      password: \"\",\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const LoginRequest = {\n      username: this.state.username,\n      password: this.state.password\n    };\n\n    this.props.login(LoginRequest);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"login\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h1 className=\"display-4 text-center\">Log In</h1>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.username\n                    })}\n                    placeholder=\"Email Address\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.onChange}\n                  />\n                  {errors.username && (\n                    <div className=\"invalid-feedback\">{errors.username}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.password\n                    })}\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChange}\n                  />\n                  {errors.password && (\n                    <div className=\"invalid-feedback\">{errors.password}</div>\n                  )}\n                </div>\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  login: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  security: state.security,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { login }\n)(Login);\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst SecuredRoute = ({ component: Component, security, ...otherProps }) => (\n  <Route\n    {...otherProps}\n    render={props =>\n      security.validToken === true ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to=\"/login\" />\n      )\n    }\n  />\n);\n\nSecuredRoute.propTypes = {\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  security: state.security\n});\n\nexport default connect(mapStateToProps)(SecuredRoute);\n","import React, { Component } from \"react\";\nimport BookItem from \"./Book/BookItem\";\nimport CreateBookButton from \"./Book/CreateBookButton\";\nimport { connect } from \"react-redux\";\nimport { getBooks } from \"../actions/bookActions\";\nimport PropTypes from \"prop-types\";\nimport {\n  CLink,\n  CButton,\n  CBadge,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CDataTable,\n  CRow,\n  CModal,\n  CModalBody,\n  CModalFooter,\n  CModalHeader,\n  CModalTitle\n  } from '@coreui/react'\nclass Library extends Component {\n  componentDidMount() {\n    this.props.getBooks();\n  }\n  onDeleteClick = id => {\n    this.props.deleteBook(id);\n  };\n\n  render() {\n    const { books } = this.props.book;\n\n    return (\n      <div className=\"books\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <h3 className=\"display-6 text-center\">લાયબ્રેરી</h3>\n              <br />\n             \n      <CRow>\n      <CCol>\n          <CCard>\n            <CCardHeader>\n            સત્સંગના પુસ્તકો અને પ્રસંગોની લાયબ્રેરી \n            </CCardHeader>\n            <CCardBody>\n            <CDataTable\n              items={books}\n              fields={fields}\n              striped\n              columnFilter\n              tableFilter\n              footer\n              itemsPerPageSelect\n              itemsPerPage={5}\n              hover\n              sorter\n              pagination\n              scopedSlots = {{\n                'id':\n                  (item)=>(\n                    <td>\n                      <CLink \n                        href={`/viewBook/${item.id}`}\n                        rel=\"noreferrer noopener\" \n                        className=\"card-header-action\"  >\n                        <CButton block className=\".btn-ghost-button\" size=\"sm\" color=\"success\">View</CButton>\n                      </CLink>\n                      \n                    </td>\n                    \n                  )\n\n              }}\n            />\n            </CCardBody>\n          </CCard>\n        </CCol>\n        </CRow>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nconst fields = ['bookName', 'bookEdition', 'pageNumber', 'subject', 'subSubject', 'reference', 'actor', 'village', 'id'];\n\nLibrary.propTypes = {\n  book: PropTypes.object.isRequired,\n  getBooks: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  book: state.book\n});\n\nexport default connect(\n  mapStateToProps,\n  { getBooks }\n)(Library);","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { createBook } from \"../../actions/bookActions\";\nimport classnames from \"classnames\";\n\nclass AddBook extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      bookName: \"\",\n      bookEdition: \"\",\n      pageNumber: \"\",\n      subject: \"\",\n      subSubject: \"\",\n      shlok: \"\",\n      event: \"\",\n      reference: \"\",\n      actor: \"\",\n      author: \"\",\n      village: \"\",\n      eventDate: \"\",\n      birthDate: \"\",\n      deathDate: \"\",\n      eventDateGuj: \"\",\n      birthDateGuj: \"\",\n      deathDateGuj: \"\",\n      comments: \"\",\n      errors: {}\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  //life cycle hooks\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const newBook = {\n      bookName: this.state.bookName,\n      bookEdition: this.state.bookEdition,\n      pageNumber: this.state.pageNumber,\n      subject: this.state.subject,\n      subSubject: this.state.subSubject,\n      shlok: this.state.shlok,\n      event: this.state.event,\n      reference: this.state.reference,\n      actor: this.state.actor,\n      author: this.state.author,\n      village: this.state.village,\n      eventDate: this.state.eventDate,\n      birthDate: this.state.birthDate,\n      deathDate: this.state.deathDate,\n      eventDateGuj: this.state.eventDateGuj,\n      birthDateGuj: this.state.birthDateGuj,\n      deathDateGuj: this.state.deathDateGuj,\n      comments: this.state.comments\n    };\n    this.props.createBook(newBook, this.state.button, this.props.history);\n  }\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div>\n        <div className=\"book\">\n          <div className=\"container\">\n            <div className=\"row\">\n\n              <div className=\"col-md-10 m-auto\">\n                <h4 className=\"display-6 text-center\">નવું પુસ્તક</h4>\n                <hr />\n              </div>\n            </div>\n\n            <form onSubmit={this.onSubmit}>\n              <div className=\"row\">\n                <div className=\"col-md-2 m-auto\">\n                  <label className=\"display-6 text-left\">પુસ્તકનું નામ: <span className=\"asterisk\">*</span></label>\n                </div>\n                <div className=\"col-md-4 m-auto\">\n                  <div className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      className={classnames(\"form-control form-control-lg\", {\n                        \"is-invalid\": errors.bookName\n                      })}\n                      placeholder=\"પુસ્તકનું નામ \"\n                      name=\"bookName\"\n                      value={this.state.bookName}\n                      onChange={this.onChange}\n                    />\n                    {errors.bookName && (\n                      <div className=\"invalid-feedback\">\n                        {errors.bookName}\n                      </div>\n                    )}\n                  </div>\n                </div>\n                <div className=\"col-md-2 m-auto\">\n                  <label className=\"display-6 text-left\">પુસ્તકની આવૃત્તિ: <span className=\"asterisk\">*</span></label>\n                </div>\n                <div className=\"col-md-4 m-auto\">\n                  <div className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      className={classnames(\"form-control form-control-lg\", {\n                        \"is-invalid\": errors.bookEdition\n                      })}\n                      placeholder=\"પુસ્તકની આવૃત્તિ\"\n                      name=\"bookEdition\"\n                      value={this.state.bookEdition}\n                      onChange={this.onChange}\n                    />\n                    {errors.bookEdition && (\n                      <div className=\"invalid-feedback\">\n                        {errors.bookEdition}\n                      </div>\n                    )}\n                  </div>\n                </div></div>\n              <div className=\"row\">\n                <div className=\"col-md-2 m-auto\">\n                  <label className=\"display-6 text-left\">પાના નંબર: </label>\n                </div>\n                <div className=\"col-md-4 m-auto\">\n                  <div className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      className={classnames(\"form-control form-control-lg\", {\n                        \"is-invalid\": errors.pageNumber\n                      })}\n                      placeholder=\"પાના નંબર\"\n                      name=\"pageNumber\"\n                      value={this.state.pageNumber}\n                      onChange={this.onChange}\n                    />\n                    {errors.pageNumber && (\n                      <div className=\"invalid-feedback\">\n                        {errors.pageNumber}\n                      </div>\n                    )}\n                  </div>\n                </div>\n                <div className=\"col-md-2 m-auto\">\n                  <label className=\"display-6 text-left\">લેખક: </label>\n                </div>\n                <div className=\"col-md-4 m-auto\">\n                  <div className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      className={classnames(\"form-control form-control-lg\", {\n                        \"is-invalid\": errors.author\n                      })}\n                      placeholder=\"લેખક\"\n                      name=\"author\"\n                      value={this.state.author}\n                      onChange={this.onChange}\n                    />\n                    {errors.author && (\n                      <div className=\"invalid-feedback\">\n                        {errors.author}\n                      </div>\n                    )}\n                  </div>\n\n                </div></div>\n                <div className=\"row\">\n                <div className=\"col-md-2 m-auto\">\n                  <label className=\"display-8 text-center\">સંદર્ભ: </label>\n                </div>\n                <div className=\"col-md-10 m-auto\">\n                  <div className=\"form-group\">\n                  <input\n                  type=\"text\"\n                  className={classnames(\"form-control form-control-lg\", {\n                    \"is-invalid\": errors.reference\n                  })}\n                  placeholder=\"સંદર્ભ\"\n                  name=\"reference\"\n                  value={this.state.reference}\n                  onChange={this.onChange}\n                  />\n                    {errors.reference && (\n                      <div className=\"invalid-feedback\">\n                        {errors.reference}\n                      </div>\n                    )}\n                  </div>\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-md-2 m-auto\">\n                  <label className=\"display-6 text-left\">મુખ્ય વિષય: </label>\n                </div>\n                <div className=\"col-md-4 m-auto\">\n                  <div className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      className={classnames(\"form-control form-control-lg\", {\n                        \"is-invalid\": errors.subject\n                      })}\n                      placeholder=\"મુખ્ય વિષય\"\n                      name=\"subject\"\n                      value={this.state.subject}\n                      onChange={this.onChange}\n                    />\n                    {errors.subject && (\n                      <div className=\"invalid-feedback\">\n                        {errors.subject}\n                      </div>\n                    )}\n                  </div>\n                </div>\n                <div className=\"col-md-2 m-auto\">\n                  <label className=\"display-6 text-left\">પેટા વિષય: </label>\n                </div>\n                <div className=\"col-md-4 m-auto\">\n                  <div className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      className={classnames(\"form-control form-control-lg\", {\n                        \"is-invalid\": errors.subSubject\n                      })}\n                      placeholder=\"પેટા વિષય\"\n                      name=\"subSubject\"\n                      value={this.state.subSubject}\n                      onChange={this.onChange}\n                    />\n                    {errors.subSubject && (\n                      <div className=\"invalid-feedback\">\n                        {errors.subSubject}\n                      </div>\n                    )}\n                  </div>\n                </div>\n              </div>\n              <div className=\"row\">\n                \n                <div className=\"col-md-2 m-auto\">\n                  <label className=\"display-6 text-left\">પ્રસંગની તારીખ: </label>\n                </div>\n                <div className=\"col-md-4 m-auto\">\n                  <div className=\"form-group\">\n                    <input\n                      type=\"date\"\n                      className=\"form-control form-control-lg\"\n                      name=\"eventDate\"\n                      value={this.state.eventDate}\n                      onChange={this.onChange}\n                    />\n                  </div>\n                </div>\n                <div className=\"col-md-2 m-auto\">\n                  <label className=\"display-6 text-left\">પ્રસંગની ગુજરાતી તારીખ: </label>\n                </div>\n                <div className=\"col-md-4 m-auto\">\n                  <div className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      className={classnames(\"form-control form-control-lg\", {\n                        \"is-invalid\": errors.eventDateGuj\n                      })}\n                      placeholder=\"પ્રસંગની ગુજરાતી તારીખ\"\n                      name=\"eventDateGuj\"\n                      value={this.state.eventDateGuj}\n                      onChange={this.onChange}\n                    />\n                    {errors.eventDateGuj && (\n                      <div className=\"invalid-feedback\">\n                        {errors.eventDateGuj}\n                      </div>\n                    )}\n                  </div>\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-md-2 m-auto\">\n                  <label className=\"display-8 text-center\">શ્લોક / સાખી: </label>\n                </div>\n                <div className=\"col-md-10 m-auto\">\n                  <div className=\"form-group\">\n                    <textarea\n                      className={classnames(\"form-control form-control-lg\", {\n                        \"is-invalid\": errors.shlok\n                      })}\n                      placeholder=\"શ્લોક / સાખી\"\n                      name=\"shlok\"\n                      value={this.state.shlok}\n                      onChange={this.onChange}\n                    />\n                    {errors.shlok && (\n                      <div className=\"invalid-feedback\">\n                        {errors.shlok}\n                      </div>\n                    )}\n                  </div>\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-md-2 m-auto\">\n                  <label className=\"display-8 text-center\">પ્રસંગ:</label>\n                </div>\n                <div className=\"col-md-10 m-auto\">\n                  <div className=\"form-group\">\n                    <textarea rows=\"4\"\n                      className={classnames(\"form-control form-control-lg\", {\n                        \"is-invalid\": errors.event\n                      })}\n                      placeholder=\"પ્રસંગ\"\n                      name=\"event\"\n                      value={this.state.event}\n                      onChange={this.onChange}\n                    />\n                    {errors.event && (\n                      <div className=\"invalid-feedback\">\n                        {errors.event}\n                      </div>\n                    )}\n                  </div>\n                </div>\n              </div>\n              <div className=\"row\">\n              <div className=\"col-md-2 m-auto\">\n                <label className=\"display-8 text-center\">વિશેષ નોંધ: </label>\n              </div>\n              <div className=\"col-md-10 m-auto\">\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.comments\n                    })}\n                    placeholder=\"વિશેષ નોંધ\"\n                    name=\"comments\"\n                    value={this.state.comments}\n                    onChange={this.onChange}\n                  />\n                  {errors.comments && (\n                    <div className=\"invalid-feedback\">\n                      {errors.comments}\n                    </div>\n                  )}\n                </div>\n              </div>\n            </div>\n              <div className=\"row\">\n                <div className=\"col-md-2 m-auto\">\n                  <label className=\"display-6 text-left\">પાત્રનું નામ: </label>\n                </div>\n                <div className=\"col-md-4 m-auto\">\n                  <div className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      className={classnames(\"form-control form-control-lg\", {\n                        \"is-invalid\": errors.actor\n                      })}\n                      placeholder=\"પાત્રનું નામ\"\n                      name=\"actor\"\n                      value={this.state.actor}\n                      onChange={this.onChange}\n                    />\n                    {errors.actor && (\n                      <div className=\"invalid-feedback\">\n                        {errors.actor}\n                      </div>\n                    )}\n                  </div>\n                </div>\n                <div className=\"col-md-2 m-auto\">\n                  <label className=\"display-6 text-left\">પાત્રનું ગામ: </label>\n                </div>\n                <div className=\"col-md-4 m-auto\">\n                  <div className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      className={classnames(\"form-control form-control-lg\", {\n                        \"is-invalid\": errors.village\n                      })}\n                      placeholder=\"પાત્રનું ગામ\"\n                      name=\"village\"\n                      value={this.state.village}\n                      onChange={this.onChange}\n                    />\n                    {errors.village && (\n                      <div className=\"invalid-feedback\">\n                        {errors.village}\n                      </div>\n                    )}\n                  </div>\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-md-2 m-auto\">\n                  <label className=\"display-6 text-left\">પાત્રની જન્મ તારીખ: </label>\n                </div>\n                <div className=\"col-md-4 m-auto\">\n                  <div className=\"form-group\">\n                    <input\n                      type=\"date\"\n                      className=\"form-control form-control-lg\"\n                      name=\"birthDate\"\n                      value={this.state.birthDate}\n                      onChange={this.onChange}\n                    />\n                  </div>\n                </div>\n                <div className=\"col-md-2 m-auto\">\n                  <label className=\"display-6 text-left\">પાત્રની ગુજરાતી જન્મ તારીખ: </label>\n                </div>\n                <div className=\"col-md-4 m-auto\">\n                  <div className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      className={classnames(\"form-control form-control-lg\", {\n                        \"is-invalid\": errors.birthDateGuj\n                      })}\n                      placeholder=\"પાત્રની ગુજરાતી જન્મ તારીખ\"\n                      name=\"birthDateGuj\"\n                      value={this.state.birthDateGuj}\n                      onChange={this.onChange}\n                    />\n                    {errors.birthDateGuj && (\n                      <div className=\"invalid-feedback\">\n                        {errors.birthDateGuj}\n                      </div>\n                    )}\n                  </div>\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-md-2 m-auto\">\n                  <label className=\"display-6 text-left\">પાત્રની મૃત્યુ તારીખ: </label>\n                </div>\n                <div className=\"col-md-4 m-auto\">\n                  <div className=\"form-group\">\n                    <input\n                      type=\"date\"\n                      className=\"form-control form-control-lg\"\n                      name=\"deathDate\"\n                      value={this.state.deathDate}\n                      onChange={this.onChange}\n                    />\n                  </div>\n                </div>\n                <div className=\"col-md-2 m-auto\">\n                  <label className=\"display-6 text-left\">પાત્રની ગુજરાતી મૃત્યુ તારીખ: </label>\n                </div>\n                <div className=\"col-md-4 m-auto\">\n                  <div className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      className={classnames(\"form-control form-control-lg\", {\n                        \"is-invalid\": errors.deathDateGuj\n                      })}\n                      placeholder=\"પાત્રની ગુજરાતી મૃત્યુ તારીખ\"\n                      name=\"deathDateGuj\"\n                      value={this.state.deathDateGuj}\n                      onChange={this.onChange}\n                    />\n                    {errors.deathDateGuj && (\n                      <div className=\"invalid-feedback\">\n                        {errors.deathDateGuj}\n                      </div>\n                    )}\n                  </div>\n                </div>\n              </div>\n              <div className=\"row\">\n\n                <div className=\"col-md-4 m-auto\">\n                  <div className=\"form-group\">\n                    <button\n                      type=\"submit\" onClick={this.onChange} value=\"continue\" name=\"button\"\n                      className=\"btn btn-primary btn-block mt-4\">ડેટા સેવ અને ચાલુ રાખો</button>\n                  </div>\n\n                </div>\n                <div className=\"col-md-4 m-auto\">\n                  <div className=\"form-group\">\n                    <button\n                      type=\"submit\" onClick={this.onChange} value=\"close\" name=\"button\"\n                      className=\"btn btn-primary btn-block mt-4\" >ડેટા સેવ અને બંધ કરો</button>\n                  </div>\n\n                </div>\n                <div className=\"col-md-4 m-auto\">\n                  <div className=\"form-group\">\n                    <button\n                      type=\"submit\" onClick={this.onChange} value=\"back\" name=\"button\"\n                      className=\"btn btn-primary btn-block mt-4\">પાછળ  જવા</button>\n                  </div>\n\n                </div></div>\n\n\n            </form>\n          </div>\n        </div>\n      </div>\n\n\n    );\n  }\n}\n\nAddBook.propTypes = {\n  createBook: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { createBook }\n)(AddBook);\n","import React, { Component } from \"react\";\nimport { getBook, createBook } from \"../../actions/bookActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\n\nclass UpdateBook extends Component {\n  //set state\n  constructor() {\n    super();\n\n    this.state = {\n      bookName: \"\",\n      bookEdition: \"\",\n      pageNumber: \"\",\n      subject: \"\",\n      subSubject: \"\",\n      shlok: \"\",\n      event: \"\",\n      reference: \"\",\n      actor: \"\",\n      author: \"\",\n      village: \"\",\n      eventDate: \"\",\n      birthDate: \"\",\n      deathDate: \"\",\n      eventDateGuj: \"\",\n      birthDateGuj: \"\",\n      deathDateGuj: \"\",\n      comments: \"\",\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n    const {\n      id,\n      bookName,\n      bookEdition,\n      pageNumber,\n      subject,\n      subSubject,\n      shlok,\n      event,\n      reference,\n      actor,\n      author,\n      village,\n      eventDate,\n      birthDate,\n      deathDate,\n      eventDateGuj,\n      birthDateGuj,\n      deathDateGuj,\n      comments\n    } = nextProps.book;\n\n    this.setState({\n      id,\n      bookName,\n      bookEdition,\n      pageNumber,\n      subject,\n      subSubject,\n      shlok,\n      event,\n      reference,\n      actor,\n      author,\n      village,\n      eventDate,\n      birthDate,\n      deathDate,\n      eventDateGuj,\n      birthDateGuj,\n      deathDateGuj,\n      comments\n    });\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.props.getBook(id, this.props.history);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const updateBook = {\n      id: this.state.id,\n      bookName: this.state.bookName,\n      bookEdition: this.state.bookEdition,\n      pageNumber: this.state.pageNumber,\n      subject: this.state.subject,\n      subSubject: this.state.subSubject,\n      shlok: this.state.shlok,\n      event: this.state.event,\n      reference: this.state.reference,\n      actor: this.state.actor,\n      author: this.state.author,\n      village: this.state.village,\n      eventDate: this.state.eventDate,\n      birthDate: this.state.birthDate,\n      deathDate: this.state.deathDate,\n      eventDateGuj: this.state.eventDateGuj,\n      birthDateGuj: this.state.birthDateGuj,\n      deathDateGuj: this.state.deathDateGuj,\n      comments: this.state.comments\n    };\n\n    this.props.createBook(updateBook, this.state.button, this.props.history);\n  }\n \n  render() {\n    const { errors } = this.state;\n    return (\n      <div>\n        <div className=\"book\">\n          <div className=\"container\">\n            <div className=\"row\">\n\n              <div className=\"col-md-10 m-auto\">\n                <h4 className=\"display-6 text-center\">પુસ્તકમાં સુધારો</h4>\n                <hr />\n              </div>\n            </div>\n\n            <form onSubmit={this.onSubmit}>\n            <div className=\"row\">\n            <div className=\"col-md-2 m-auto\">\n              <label className=\"display-6 text-left\">પુસ્તકનું નામ: <span className=\"asterisk\">*</span></label>\n            </div>\n            <div className=\"col-md-4 m-auto\">\n              <div className=\"form-group\">\n                <input\n                  type=\"text\"\n                  className={classnames(\"form-control form-control-lg\", {\n                    \"is-invalid\": errors.bookName\n                  })}\n                  placeholder=\"પુસ્તકનું નામ \"\n                  name=\"bookName\"\n                  value={this.state.bookName}\n                  onChange={this.onChange}\n                />\n                {errors.bookName && (\n                  <div className=\"invalid-feedback\">\n                    {errors.bookName}\n                  </div>\n                )}\n              </div>\n            </div>\n            <div className=\"col-md-2 m-auto\">\n              <label className=\"display-6 text-left\">પુસ્તકની આવૃત્તિ: <span className=\"asterisk\">*</span></label>\n            </div>\n            <div className=\"col-md-4 m-auto\">\n              <div className=\"form-group\">\n                <input\n                  type=\"text\"\n                  className={classnames(\"form-control form-control-lg\", {\n                    \"is-invalid\": errors.bookEdition\n                  })}\n                  placeholder=\"પુસ્તકની આવૃત્તિ\"\n                  name=\"bookEdition\"\n                  value={this.state.bookEdition}\n                  onChange={this.onChange}\n                />\n                {errors.bookEdition && (\n                  <div className=\"invalid-feedback\">\n                    {errors.bookEdition}\n                  </div>\n                )}\n              </div>\n            </div></div>\n          <div className=\"row\">\n            <div className=\"col-md-2 m-auto\">\n              <label className=\"display-6 text-left\">પાના નંબર: </label>\n            </div>\n            <div className=\"col-md-4 m-auto\">\n              <div className=\"form-group\">\n                <input\n                  type=\"text\"\n                  className={classnames(\"form-control form-control-lg\", {\n                    \"is-invalid\": errors.pageNumber\n                  })}\n                  placeholder=\"પાના નંબર\"\n                  name=\"pageNumber\"\n                  value={this.state.pageNumber}\n                  onChange={this.onChange}\n                />\n                {errors.pageNumber && (\n                  <div className=\"invalid-feedback\">\n                    {errors.pageNumber}\n                  </div>\n                )}\n              </div>\n            </div>\n            <div className=\"col-md-2 m-auto\">\n              <label className=\"display-6 text-left\">લેખક: </label>\n            </div>\n            <div className=\"col-md-4 m-auto\">\n              <div className=\"form-group\">\n                <input\n                  type=\"text\"\n                  className={classnames(\"form-control form-control-lg\", {\n                    \"is-invalid\": errors.author\n                  })}\n                  placeholder=\"લેખક\"\n                  name=\"author\"\n                  value={this.state.author}\n                  onChange={this.onChange}\n                />\n                {errors.author && (\n                  <div className=\"invalid-feedback\">\n                    {errors.author}\n                  </div>\n                )}\n              </div>\n\n            </div></div>\n            <div className=\"row\">\n            <div className=\"col-md-2 m-auto\">\n              <label className=\"display-8 text-center\">સંદર્ભ: </label>\n            </div>\n            <div className=\"col-md-10 m-auto\">\n              <div className=\"form-group\">\n              <input\n              type=\"text\"\n              className={classnames(\"form-control form-control-lg\", {\n                \"is-invalid\": errors.reference\n              })}\n              placeholder=\"સંદર્ભ\"\n              name=\"reference\"\n              value={this.state.reference}\n              onChange={this.onChange}\n              />\n                {errors.reference && (\n                  <div className=\"invalid-feedback\">\n                    {errors.reference}\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-md-2 m-auto\">\n              <label className=\"display-6 text-left\">મુખ્ય વિષય: </label>\n            </div>\n            <div className=\"col-md-4 m-auto\">\n              <div className=\"form-group\">\n                <input\n                  type=\"text\"\n                  className={classnames(\"form-control form-control-lg\", {\n                    \"is-invalid\": errors.subject\n                  })}\n                  placeholder=\"મુખ્ય વિષય\"\n                  name=\"subject\"\n                  value={this.state.subject}\n                  onChange={this.onChange}\n                />\n                {errors.subject && (\n                  <div className=\"invalid-feedback\">\n                    {errors.subject}\n                  </div>\n                )}\n              </div>\n            </div>\n            <div className=\"col-md-2 m-auto\">\n              <label className=\"display-6 text-left\">પેટા વિષય: </label>\n            </div>\n            <div className=\"col-md-4 m-auto\">\n              <div className=\"form-group\">\n                <input\n                  type=\"text\"\n                  className={classnames(\"form-control form-control-lg\", {\n                    \"is-invalid\": errors.subSubject\n                  })}\n                  placeholder=\"પેટા વિષય\"\n                  name=\"subSubject\"\n                  value={this.state.subSubject}\n                  onChange={this.onChange}\n                />\n                {errors.subSubject && (\n                  <div className=\"invalid-feedback\">\n                    {errors.subSubject}\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n          <div className=\"row\">\n            \n            <div className=\"col-md-2 m-auto\">\n              <label className=\"display-6 text-left\">પ્રસંગની તારીખ: </label>\n            </div>\n            <div className=\"col-md-4 m-auto\">\n              <div className=\"form-group\">\n                <input\n                  type=\"date\"\n                  className=\"form-control form-control-lg\"\n                  name=\"eventDate\"\n                  value={this.state.eventDate}\n                  onChange={this.onChange}\n                />\n              </div>\n            </div>\n            <div className=\"col-md-2 m-auto\">\n              <label className=\"display-6 text-left\">પ્રસંગની ગુજરાતી તારીખ: </label>\n            </div>\n            <div className=\"col-md-4 m-auto\">\n              <div className=\"form-group\">\n                <input\n                  type=\"text\"\n                  className={classnames(\"form-control form-control-lg\", {\n                    \"is-invalid\": errors.eventDateGuj\n                  })}\n                  placeholder=\"પ્રસંગની ગુજરાતી તારીખ\"\n                  name=\"eventDateGuj\"\n                  value={this.state.eventDateGuj}\n                  onChange={this.onChange}\n                />\n                {errors.eventDateGuj && (\n                  <div className=\"invalid-feedback\">\n                    {errors.eventDateGuj}\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-md-2 m-auto\">\n              <label className=\"display-8 text-center\">શ્લોક / સાખી: </label>\n            </div>\n            <div className=\"col-md-10 m-auto\">\n              <div className=\"form-group\">\n                <textarea\n                  className={classnames(\"form-control form-control-lg\", {\n                    \"is-invalid\": errors.shlok\n                  })}\n                  placeholder=\"શ્લોક / સાખી\"\n                  name=\"shlok\"\n                  value={this.state.shlok}\n                  onChange={this.onChange}\n                />\n                {errors.shlok && (\n                  <div className=\"invalid-feedback\">\n                    {errors.shlok}\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-md-2 m-auto\">\n              <label className=\"display-8 text-center\">પ્રસંગ:</label>\n            </div>\n            <div className=\"col-md-10 m-auto\">\n              <div className=\"form-group\">\n                <textarea rows=\"4\"\n                  className={classnames(\"form-control form-control-lg\", {\n                    \"is-invalid\": errors.event\n                  })}\n                  placeholder=\"પ્રસંગ\"\n                  name=\"event\"\n                  value={this.state.event}\n                  onChange={this.onChange}\n                />\n                {errors.event && (\n                  <div className=\"invalid-feedback\">\n                    {errors.event}\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n          <div className=\"row\">\n          <div className=\"col-md-2 m-auto\">\n            <label className=\"display-8 text-center\">વિશેષ નોંધ: </label>\n          </div>\n          <div className=\"col-md-10 m-auto\">\n            <div className=\"form-group\">\n              <input\n                type=\"text\"\n                className={classnames(\"form-control form-control-lg\", {\n                  \"is-invalid\": errors.comments\n                })}\n                placeholder=\"વિશેષ નોંધ\"\n                name=\"comments\"\n                value={this.state.comments}\n                onChange={this.onChange}\n              />\n              {errors.comments && (\n                <div className=\"invalid-feedback\">\n                  {errors.comments}\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n          <div className=\"row\">\n            <div className=\"col-md-2 m-auto\">\n              <label className=\"display-6 text-left\">પાત્રનું નામ: </label>\n            </div>\n            <div className=\"col-md-4 m-auto\">\n              <div className=\"form-group\">\n                <input\n                  type=\"text\"\n                  className={classnames(\"form-control form-control-lg\", {\n                    \"is-invalid\": errors.actor\n                  })}\n                  placeholder=\"પાત્રનું નામ\"\n                  name=\"actor\"\n                  value={this.state.actor}\n                  onChange={this.onChange}\n                />\n                {errors.actor && (\n                  <div className=\"invalid-feedback\">\n                    {errors.actor}\n                  </div>\n                )}\n              </div>\n            </div>\n            <div className=\"col-md-2 m-auto\">\n              <label className=\"display-6 text-left\">પાત્રનું ગામ: </label>\n            </div>\n            <div className=\"col-md-4 m-auto\">\n              <div className=\"form-group\">\n                <input\n                  type=\"text\"\n                  className={classnames(\"form-control form-control-lg\", {\n                    \"is-invalid\": errors.village\n                  })}\n                  placeholder=\"પાત્રનું ગામ\"\n                  name=\"village\"\n                  value={this.state.village}\n                  onChange={this.onChange}\n                />\n                {errors.village && (\n                  <div className=\"invalid-feedback\">\n                    {errors.village}\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-md-2 m-auto\">\n              <label className=\"display-6 text-left\">પાત્રની જન્મ તારીખ: </label>\n            </div>\n            <div className=\"col-md-4 m-auto\">\n              <div className=\"form-group\">\n                <input\n                  type=\"date\"\n                  className=\"form-control form-control-lg\"\n                  name=\"birthDate\"\n                  value={this.state.birthDate}\n                  onChange={this.onChange}\n                />\n              </div>\n            </div>\n            <div className=\"col-md-2 m-auto\">\n              <label className=\"display-6 text-left\">પાત્રની ગુજરાતી જન્મ તારીખ: </label>\n            </div>\n            <div className=\"col-md-4 m-auto\">\n              <div className=\"form-group\">\n                <input\n                  type=\"text\"\n                  className={classnames(\"form-control form-control-lg\", {\n                    \"is-invalid\": errors.birthDateGuj\n                  })}\n                  placeholder=\"પાત્રની ગુજરાતી જન્મ તારીખ\"\n                  name=\"birthDateGuj\"\n                  value={this.state.birthDateGuj}\n                  onChange={this.onChange}\n                />\n                {errors.birthDateGuj && (\n                  <div className=\"invalid-feedback\">\n                    {errors.birthDateGuj}\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-md-2 m-auto\">\n              <label className=\"display-6 text-left\">પાત્રની મૃત્યુ તારીખ: </label>\n            </div>\n            <div className=\"col-md-4 m-auto\">\n              <div className=\"form-group\">\n                <input\n                  type=\"date\"\n                  className=\"form-control form-control-lg\"\n                  name=\"deathDate\"\n                  value={this.state.deathDate}\n                  onChange={this.onChange}\n                />\n              </div>\n            </div>\n            <div className=\"col-md-2 m-auto\">\n              <label className=\"display-6 text-left\">પાત્રની ગુજરાતી મૃત્યુ તારીખ: </label>\n            </div>\n            <div className=\"col-md-4 m-auto\">\n              <div className=\"form-group\">\n                <input\n                  type=\"text\"\n                  className={classnames(\"form-control form-control-lg\", {\n                    \"is-invalid\": errors.deathDateGuj\n                  })}\n                  placeholder=\"પાત્રની ગુજરાતી મૃત્યુ તારીખ\"\n                  name=\"deathDateGuj\"\n                  value={this.state.deathDateGuj}\n                  onChange={this.onChange}\n                />\n                {errors.deathDateGuj && (\n                  <div className=\"invalid-feedback\">\n                    {errors.deathDateGuj}\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n              <div className=\"row\">\n\n\n                <div className=\"col-md-4 m-auto\">\n                  <div className=\"form-group\">\n                    <button\n                      type=\"submit\" onClick={this.onChange} value=\"close\" name=\"button\"\n                      className=\"btn btn-primary btn-block mt-4\" >પુસ્તકમાં સુધારો</button>\n                  </div>\n                </div>\n                <div className=\"col-md-4 m-auto\">\n                  <div className=\"form-group\">\n                    <button\n                      onClick={toggleFade} value=\"back\" name=\"button\"\n                      className=\"btn btn-primary btn-block mt-4\">પાછળ  જવા</button>\n                  </div>\n                </div>\n              </div>\n             </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nconst toggleFade = () => {\n  window.history.back();\n}\nUpdateBook.propTypes = {\n  getBook: PropTypes.func.isRequired,\n  createBook: PropTypes.func.isRequired,\n  book: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  book: state.book.book,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { getBook, createBook }\n)(UpdateBook);\n","import React, { useState } from 'react'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCardHeader,\n  CCol,\n  CCollapse,\n  CFade,\n  CRow,\n  CListGroupItem,\n  CListGroup\n} from '@coreui/react';\n\nconst Collapses = (data) => {\n\n  console.log(\"Data: \"+JSON.stringify(data));\n  const [collapse, setCollapse] = useState(false)\n  const [collapseMulti, setCollapseMulti] = useState([false, false])\n  const [accordion, setAccordion] = useState(1)\n  const [fade, setFade] = useState(true)\n\n  const toggle = (e) => {\n    setCollapse(!collapse)\n    e.preventDefault()\n  }\n\n  const toggleMulti = (type) => {\n    let newCollapse = collapseMulti.slice()\n    switch (type) {\n      case \"left\":\n        newCollapse[0] = !collapseMulti[0];\n        break;\n      case \"right\":\n        newCollapse[1] = !collapseMulti[1];\n        break;\n      case \"both\":\n        newCollapse[0] = !collapseMulti[0];\n        newCollapse[1] = !collapseMulti[1];\n        break;\n      default:\n    }\n    setCollapseMulti(newCollapse)\n  }\n\n  const toggleFade = () => {\n    window.history.back();\n  }\n\n  return (\n    <CRow>\n \n      <CCol>\n        <CCard>\n          <CCardHeader>\n          <h2 className=\"m-0 p-0\">\n          <center> <small>પુસ્તકનું નામ:</small> {data.bookName}   - \n            <small> આવૃત્તિ: {data.bookEdition}</small>\n          </center>\n\n          </h2>\n          </CCardHeader>\n          <CCardBody>\n            <div id=\"accordion\">\n              <CCard className=\"mb-0\">\n                <CCardHeader id=\"headingOne\">\n                  <CButton  \n                    className=\"text-left m-0 p-0\" >\n                    પાત્રનું નામ:<b>{data.actor} </b> \n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;                \n                    પાત્રનું ગામ: <b>{data.village}</b>\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;                \n                    પાત્રની જન્મ તારીખ:<b>{data.birthDate}</b>\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;                \n                    ગુજરાતી જન્મ તારીખ:<b>{data.birthDateGuj}</b>\n                    <p>પાત્રની મૃત્યુ તારીખ:<b>{data.deathDate}</b>\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;                \n                    ગુજરાતી મૃત્યુ તારીખ:<b>{data.deathDateGuj}</b>\n                    </p>\n                    <p>મુખ્ય વિષય:<b>{data.subject} </b> \n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;                \n                    પેટા વિષય: <b>{data.subSubject}</b>\n                    </p>\n                    સંદર્ભ:<b>{data.reference} </b> \n                  </CButton>\n                </CCardHeader>\n              </CCard>\n             \n              <CCard className=\"mb-0\">\n                <CCardHeader id=\"headingTwo\">\n                  <CButton \n                    className=\"text-left m-0 p-0\" >\n                    <h5 className=\"m-0 p-0\">શ્લોક / સાખી</h5>\n                  </CButton>\n                </CCardHeader>\n                <CCollapse show=\"true\">\n                  <CCardBody>\n                    {data.shlok}\n                  </CCardBody>\n                </CCollapse>\n              </CCard>\n              <CCard className=\"mb-0\">\n                <CCardHeader id=\"headingThree\">\n                  <CButton \n                    className=\"text-left m-0 p-0\" >\n                    <h5 className=\"m-0 p-0\">\n                      <center>પ્રસંગ\n                      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \n                      <small>પ્રસંગની તારીખ:</small> {data.eventDate}   \n                      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \n                        <small> ગુજરાતી તારીખ: </small>{data.eventDateGuj}\n                      </center>\n\n                    </h5>\n                    \n                  </CButton>\n                </CCardHeader>\n                <CCollapse show=\"true\">\n                  <CCardBody>\n                    {data.event}\n                  </CCardBody>\n                </CCollapse>\n              </CCard>\n              <CCard className=\"mb-0\">\n                <CCardHeader id=\"headingThree\">\n                  <CButton \n                    className=\"text-left m-0 p-0\" >\n                    <h5 className=\"m-0 p-0\">વિશેષ નોંધ</h5>\n                  </CButton>\n                </CCardHeader>\n                <CCollapse show=\"true\">\n                  <CCardBody>\n                    {data.comments}\n                  </CCardBody>\n                </CCollapse>\n              </CCard>\n              \n            </div>\n          </CCardBody>\n          <CCardFooter>\n            <center>\n              <CButton color=\"primary\" onClick={toggleFade}>પાછળ  જવા</CButton>\n            </center>\n          </CCardFooter>\n        </CCard>\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default Collapses\n","import React, { Component, useState } from \"react\";\nimport { getBook } from \"../../actions/bookActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport Collapses from \"../Collapses\";\nimport Popovers from \"../Popovers\";\n\n\nimport { CLink, CButton, CTextarea } from '@coreui/react'\nimport {\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCardHeader,\n  CCol,\n  CCollapse,\n  CFade,\n  CRow \n} from '@coreui/react';\n\nclass ViewBook extends Component {\n  //set state\n  constructor() {\n    super();\n\n    this.state = {\n      bookName: \"\",\n      bookEdition: \"\",\n      pageNumber: \"\",\n      subject: \"\",\n      subSubject: \"\",\n      shlok: \"\",\n      event: \"\",\n      reference: \"\",\n      actor: \"\",\n      author: \"\",\n      village: \"\",\n      eventDate: \"\",\n      birthDate: \"\",\n      deathDate: \"\",\n      eventDateGuj: \"\",\n      birthDateGuj: \"\",\n      deathDateGuj: \"\",\n      comments: \"\",\n      errors: {}\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n    const {\n      id,\n      bookName,\n      bookEdition,\n      pageNumber,\n      subject,\n      subSubject,\n      shlok,\n      event,\n      reference,\n      actor,\n      author,\n      village,\n      eventDate,\n      birthDate,\n      deathDate,\n      eventDateGuj,\n      birthDateGuj,\n      deathDateGuj,\n      comments\n    } = nextProps.book;\n\n    this.setState({\n      id,\n      bookName,\n      bookEdition,\n      pageNumber,\n      subject,\n      subSubject,\n      shlok,\n      event,\n      reference,\n      actor,\n      author,\n      village,\n      eventDate,\n      birthDate,\n      deathDate,\n      eventDateGuj,\n      birthDateGuj,\n      deathDateGuj,\n      comments\n    });\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.props.getBook(id, this.props.history);\n  }\n \n  render() {\n   \n      return (\n        <Collapses bookName={this.state.bookName} author={this.state.author} \n        bookEdition={this.state.bookEdition}  pageNumber={this.state.pageNumber} \n        subject={this.state.subject} subSubject={this.state.subSubject}\n        shlok={this.state.shlok} event={this.state.event} \n        comments={this.state.comments} reference={this.state.reference} \n        actor={this.state.actor} village={this.state.village}\n        eventDate={this.state.eventDate} eventDateGuj={this.state.eventDateGuj} \n        birthDate={this.state.birthDate} birthDateGuj={this.state.birthDateGuj} \n        deathDate={this.state.deathDate} deathDateGuj={this.state.deathDateGuj} />\n\n    );\n  }\n}\n\n\nViewBook.propTypes = {\n  getBook: PropTypes.func.isRequired,\n  book: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  book: state.book.book,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { getBook }\n)(ViewBook);\n","import React, { Component, useState } from \"react\";\nimport { getBookContent } from \"../../actions/bookActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { CLink, CButton, CTextarea } from '@coreui/react'\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CModal,\n  CModalBody,\n  CModalFooter,\n  CModalHeader,\n  CModalTitle,\n  CRow\n} from '@coreui/react'\n\nclass BookContent extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      id: \"\",\n      shlok: \"\",\n      event: \"\",\n      errors: {}\n    };\n    \n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n    const {\n      id,\n      shlok,\n      event\n    } = nextProps.bookContent;\n\n    this.setState({\n      id,\n      shlok,\n      event\n    });\n  }\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    console.log(\"componentDidMount: \"+id);\n    this.props.getBookContent(id, this.props.history);\n  }\n\n  \n  render() {\n    return (\n      <div>\n      <div className=\"book\">\n          <div className=\"container\">\n            <div className=\"row\">\n              \n                <div className=\"col-md-10 m-auto\">\n                <h6 className=\"display-6 text-center\">{this.state.bookName} - {this.state.bookEdition} </h6>\n               <hr/>\n                </div>\n                </div>\n                \n               \n                  <div className=\"row\">\n                <div className=\"col-md-2 m-auto\">\n                <label className=\"display-6 text-left\">Page Number: </label>\n                </div>\n              <div className=\"col-md-4 m-auto\">\n              <label className=\"display-6 text-left\">{this.state.pageNumber}</label>\n\n                  </div>\n                  <div className=\"col-md-2 m-auto\">\n                <label className=\"display-6 text-left\">Sandarbh: </label>\n                </div>\n              <div className=\"col-md-4 m-auto\">\n             \n              <label className=\"display-6 text-left\">{this.state.reference}</label>\n\n                  </div></div>\n                  <div className=\"row\">\n                  <div className=\"col-md-2 m-auto\">\n                  <label className=\"display-6 text-left\">Subject (Vishay): </label>\n                  </div>\n                <div className=\"col-md-4 m-auto\">\n                <label className=\"display-6 text-left\">{this.state.subject}</label>\n\n                </div>\n                <div className=\"col-md-2 m-auto\">\n                <label className=\"display-6 text-left\">Prasang Date: </label>\n                </div>\n                <div className=\"col-md-4 m-auto\">\n                <label className=\"display-6 text-left\">{this.state.eventDate}</label>\n\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-md-2 m-auto\">\n                <label className=\"display-6 text-left\">Patra (Character): </label>\n                </div>\n              <div className=\"col-md-4 m-auto\">\n              <label className=\"display-6 text-left\">{this.state.actor}</label>\n\n              \n              </div>\n              <div className=\"col-md-2 m-auto\">\n              <label className=\"display-6 text-left\">Gaam (Village): </label>\n              </div>\n              <div className=\"col-md-4 m-auto\">\n              <label className=\"display-6 text-left\">{this.state.village}</label>\n\n              \n              </div>\n              </div>\n              <div className=\"row\">\n              <div className=\"col-md-2 m-auto\">\n              <label className=\"display-6 text-left\">Birth Date: </label>\n              </div>\n            <div className=\"col-md-4 m-auto\">\n            <label className=\"display-6 text-left\">{this.state.birthDate}</label>\n            </div>\n            <div className=\"col-md-2 m-auto\">\n            <label className=\"display-6 text-left\">Death Date: </label>\n            </div>\n            <div className=\"col-md-4 m-auto\">\n            <label className=\"display-6 text-left\">{this.state.deathDate}</label>\n\n           \n            </div>\n            </div>\n              <div className=\"row\">\n                <div className=\"col-md-2 m-auto\">\n                <label className=\"display-8 text-center\">Shlok:</label>\n                </div>\n              <div className=\"col-md-10 m-auto\">\n                  <CTextarea \n                    name=\"textarea-input\" \n                    id=\"textarea-input\" \n                    rows=\"3\"\n                    value={this.state.shlok} />\n                    \n                    \n                 </div></div>\n                 <div className=\"row\">\n                <div className=\"col-md-2 m-auto\">\n                <label className=\"display-8 text-center\">Prasang (Event):</label>\n                </div>\n              <div className=\"col-md-10 m-auto\">\n                 \n              <CTextarea \n                  name=\"textarea-input\" \n                  id=\"textarea-input\" \n                  rows=\"10\"\n                  value={this.state.event} />\n                    \n                 </div></div>\n\n                 \n            \n                  \n              </div>\n            </div>\n            <div className=\"row\">\n             <div className=\"col-md-2 m-auto\">\n             \n                    <CLink \n                        href={`/dashboard`}\n                        rel=\"noreferrer noopener\" \n                        className=\"card-header-action\"  >\n                        <CButton block className=\".btn-ghost-button\" size=\"sm\" color=\"info\">Close</CButton>\n                      </CLink>\n            \n                </div></div>\n                </div>\n    )\n  }\n}\n\nBookContent.propTypes = {\n  getBookContent: PropTypes.func.isRequired,\n  bookContent: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  bookContent: state.book.bookContent,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { getBookContent }\n)(BookContent);\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Dashboard from \"./components/Dashboard\";\nimport Header from \"./components/Layout/Header\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport AddProject from \"./components/Project/AddProject\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport UpdateProject from \"./components/Project/UpdateProject\";\nimport ProjectBoard from \"./components/ProjectBoard/ProjectBoard\";\nimport AddProjectTask from \"./components/ProjectBoard/ProjectTasks/AddProjectTask\";\nimport UpdateProjectTask from \"./components/ProjectBoard/ProjectTasks/UpdateProjectTask\";\nimport Landing from \"./components/Layout/Landing\";\nimport Register from \"./components/UserManagement/Register\";\nimport Login from \"./components/UserManagement/Login\";\nimport jwt_decode from \"jwt-decode\";\nimport setJWTToken from \"./securityUtils/setJWTToken\";\nimport { SET_CURRENT_USER } from \"./actions/types\";\nimport { logout } from \"./actions/securityActions\";\nimport SecuredRoute from \"./securityUtils/SecureRoute\";\nimport Library from \"./components/Library\";\nimport AddBook from \"./components/Book/AddBook\";\nimport UpdateBook from \"./components/Book/UpdateBook\";\nimport ViewBook from \"./components/Book/ViewBook\";\nimport BookContent from \"./components/Book/BookContent\";\n\nconst jwtToken = localStorage.jwtToken;\n\nif (jwtToken) {\n  setJWTToken(jwtToken);\n  const decoded_jwtToken = jwt_decode(jwtToken);\n  store.dispatch({\n    type: SET_CURRENT_USER,\n    payload: decoded_jwtToken\n  });\n\n  const currentTime = Date.now() / 1000;\n  if (decoded_jwtToken.exp < currentTime) {\n    store.dispatch(logout());\n    window.location.href = \"/\";\n  }\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Header />\n            {\n              //Public Routes\n            }\n\n            <Route exact path=\"/\" component={Landing} />\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/login\" component={Login} />\n\n            {\n              //Private Routes\n            }\n            <Switch>\n              <SecuredRoute exact path=\"/dashboard\" component={Dashboard} />\n              <SecuredRoute exact path=\"/library\" component={Library} />\n              <SecuredRoute exact path=\"/addBook\" component={AddBook} />\n              <SecuredRoute exact path=\"/addProject\" component={AddProject} />\n              <SecuredRoute\n                exact\n                path=\"/updateBook/:id\"\n                component={UpdateBook}\n              />\n               <SecuredRoute\n                exact\n                path=\"/updateProject/:id\"\n                component={UpdateProject}\n              />\n              <SecuredRoute\n                exact\n                path=\"/projectBoard/:id\"\n                component={ProjectBoard}\n              />\n              <SecuredRoute\n                exact\n                path=\"/addProjectTask/:id\"\n                component={AddProjectTask}\n              />\n              <SecuredRoute\n                exact\n                path=\"/updateProjectTask/:backlog_id/:pt_id\"\n                component={UpdateProjectTask}\n              />\n              <SecuredRoute exact path=\"/bookContent/:id\" component={BookContent} />\n              <SecuredRoute exact path=\"/viewBook/:id\" component={ViewBook} />\n            </Switch>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}